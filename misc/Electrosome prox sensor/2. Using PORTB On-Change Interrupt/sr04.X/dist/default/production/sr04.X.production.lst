

Microchip Technology PIC LITE Macro Assembler V1.32 build 58300 
                                                                                               Wed Aug 20 15:20:37 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 58300
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	intentry,global,class=CODE,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2
    25                           	psect	text14,local,class=CODE,merge=1,delta=2
    26                           	dabs	1,0x7E,2
    27  0000                     	;# 
    28  0001                     	;# 
    29  0002                     	;# 
    30  0003                     	;# 
    31  0004                     	;# 
    32  0005                     	;# 
    33  0006                     	;# 
    34  0007                     	;# 
    35  0008                     	;# 
    36  0009                     	;# 
    37  000A                     	;# 
    38  000B                     	;# 
    39  000C                     	;# 
    40  000D                     	;# 
    41  000E                     	;# 
    42  000E                     	;# 
    43  000F                     	;# 
    44  0010                     	;# 
    45  0011                     	;# 
    46  0012                     	;# 
    47  0013                     	;# 
    48  0014                     	;# 
    49  0015                     	;# 
    50  0015                     	;# 
    51  0016                     	;# 
    52  0017                     	;# 
    53  0018                     	;# 
    54  0019                     	;# 
    55  001A                     	;# 
    56  001B                     	;# 
    57  001B                     	;# 
    58  001C                     	;# 
    59  001D                     	;# 
    60  001E                     	;# 
    61  001F                     	;# 
    62  0081                     	;# 
    63  0085                     	;# 
    64  0086                     	;# 
    65  0087                     	;# 
    66  0088                     	;# 
    67  0089                     	;# 
    68  008C                     	;# 
    69  008D                     	;# 
    70  008E                     	;# 
    71  0091                     	;# 
    72  0092                     	;# 
    73  0093                     	;# 
    74  0094                     	;# 
    75  0098                     	;# 
    76  0099                     	;# 
    77  009C                     	;# 
    78  009D                     	;# 
    79  009E                     	;# 
    80  009F                     	;# 
    81  010C                     	;# 
    82  010D                     	;# 
    83  010E                     	;# 
    84  010F                     	;# 
    85  018C                     	;# 
    86  018D                     	;# 
    87  0010                     _T1CON	set	16
    88  000F                     _TMR1H	set	15
    89  000E                     _TMR1L	set	14
    90  005F                     _GIE	set	95
    91  0030                     _RB0	set	48
    92  0034                     _RB4	set	52
    93  005B                     _RBIE	set	91
    94  0058                     _RBIF	set	88
    95  0042                     _RD2	set	66
    96  0043                     _RD3	set	67
    97  0044                     _RD4	set	68
    98  0045                     _RD5	set	69
    99  0046                     _RD6	set	70
   100  0047                     _RD7	set	71
   101  0080                     _TMR1ON	set	128
   102  0086                     _TRISB	set	134
   103  0088                     _TRISD	set	136
   104                           
   105                           	psect	strings
   106  0530                     __pstrings:	
   107  0530                     stringtab:	
   108  0530                     __stringtab:	
   109  0530                     stringcode:	
   110                           ;	String table - string pointers are 1 byte each
   111                           
   112  0530                     stringdir:	
   113  0530  3005               	movlw	high stringdir
   114  0531  008A               	movwf	10
   115  0532  0804               	movf	4,w
   116  0533  0A84               	incf	4,f
   117  0534  0782               	addwf	2,f
   118  0535                     __stringbase:	
   119  0535  3400               	retlw	0
   120  0536                     __end_of__stringtab:	
   121  0536                     __stringdata:	
   122  0536                     STR_5:	
   123  0536  344F               	retlw	79	;'O'
   124  0537  3475               	retlw	117	;'u'
   125  0538  3474               	retlw	116	;'t'
   126  0539  3420               	retlw	32	;' '
   127  053A  346F               	retlw	111	;'o'
   128  053B  3466               	retlw	102	;'f'
   129  053C  3420               	retlw	32	;' '
   130  053D  3452               	retlw	82	;'R'
   131  053E  3461               	retlw	97	;'a'
   132  053F  346E               	retlw	110	;'n'
   133  0540  3467               	retlw	103	;'g'
   134  0541  3465               	retlw	101	;'e'
   135  0542  3400               	retlw	0
   136  0543                     STR_1:	
   137  0543  3444               	retlw	68	;'D'
   138  0544  3465               	retlw	101	;'e'
   139  0545  3476               	retlw	118	;'v'
   140  0546  3465               	retlw	101	;'e'
   141  0547  346C               	retlw	108	;'l'
   142  0548  346F               	retlw	111	;'o'
   143  0549  3470               	retlw	112	;'p'
   144  054A  3465               	retlw	101	;'e'
   145  054B  3464               	retlw	100	;'d'
   146  054C  3420               	retlw	32	;' '
   147  054D  3442               	retlw	66	;'B'
   148  054E  3479               	retlw	121	;'y'
   149  054F  3400               	retlw	0
   150  0550                     STR_3:	
   151  0550  3444               	retlw	68	;'D'
   152  0551  3469               	retlw	105	;'i'
   153  0552  3473               	retlw	115	;'s'
   154  0553  3474               	retlw	116	;'t'
   155  0554  3461               	retlw	97	;'a'
   156  0555  346E               	retlw	110	;'n'
   157  0556  3463               	retlw	99	;'c'
   158  0557  3465               	retlw	101	;'e'
   159  0558  3420               	retlw	32	;' '
   160  0559  343D               	retlw	61	;'='
   161  055A  3420               	retlw	32	;' '
   162  055B  3400               	retlw	0
   163  055C                     STR_2:	
   164  055C  3465               	retlw	101	;'e'
   165  055D  346C               	retlw	108	;'l'
   166  055E  3465               	retlw	101	;'e'
   167  055F  3463               	retlw	99	;'c'
   168  0560  3474               	retlw	116	;'t'
   169  0561  3472               	retlw	114	;'r'
   170  0562  346F               	retlw	111	;'o'
   171  0563  3453               	retlw	83	;'S'
   172  0564  346F               	retlw	111	;'o'
   173  0565  346D               	retlw	109	;'m'
   174  0566  3465               	retlw	101	;'e'
   175  0567  3400               	retlw	0
   176  0568                     STR_4:	
   177  0568  3463               	retlw	99	;'c'
   178  0569  346D               	retlw	109	;'m'
   179  056A  3400               	retlw	0
   180  056B                     __end_of__stringdata:	
   181                           
   182                           ; #config settings
   183  0000                     
   184                           	psect	cinit
   185  0015                     start_initialization:	
   186  0015                     __initialization:	
   187                           
   188                           ; Clear objects allocated to BANK0
   189  0015  01CA               	clrf	__pbssBANK0& (0+127)
   190  0016  01CB               	clrf	(__pbssBANK0+1)& (0+127)
   191  0017                     end_of_initialization:	
   192                           ;End of C runtime variable initialization code
   193                           
   194  0017                     __end_of__initialization:	
   195  0017  0183               	clrf	3
   196  0018  120A  118A  281B   	ljmp	_main	;jump to C main() function
   197                           
   198                           	psect	bssBANK0
   199  004A                     __pbssBANK0:	
   200  004A                     _a:	
   201  004A                     	ds	2
   202                           
   203                           	psect	cstackBANK1
   204  00A0                     __pcstackBANK1:	
   205  00A0                     ??_Lcd_Set_Cursor:	
   206  00A0                     ___awdiv@counter:	
   207                           ; 0 bytes @ 0x0
   208                           
   209  00A0                     ___awmod@counter:	
   210                           ; 1 bytes @ 0x0
   211                           
   212  00A0                     Lcd_Write_String@i:	
   213                           ; 1 bytes @ 0x0
   214                           
   215                           
   216                           ; 2 bytes @ 0x0
   217  00A0                     	ds	1
   218  00A1                     ___awdiv@sign:	
   219  00A1                     ___awmod@sign:	
   220                           ; 1 bytes @ 0x1
   221                           
   222                           
   223                           ; 1 bytes @ 0x1
   224  00A1                     	ds	1
   225  00A2                     Lcd_Set_Cursor@a:	
   226  00A2                     Lcd_Write_String@a:	
   227                           ; 1 bytes @ 0x2
   228                           
   229  00A2                     ___awdiv@quotient:	
   230                           ; 1 bytes @ 0x2
   231                           
   232                           
   233                           ; 2 bytes @ 0x2
   234  00A2                     	ds	1
   235  00A3                     Lcd_Set_Cursor@z:	
   236                           
   237                           ; 1 bytes @ 0x3
   238  00A3                     	ds	1
   239  00A4                     Lcd_Set_Cursor@y:	
   240                           
   241                           ; 1 bytes @ 0x4
   242  00A4                     	ds	1
   243  00A5                     Lcd_Set_Cursor@temp:	
   244                           
   245                           ; 1 bytes @ 0x5
   246  00A5                     	ds	1
   247  00A6                     ??_main:	
   248                           
   249                           ; 0 bytes @ 0x6
   250  00A6                     	ds	3
   251                           
   252                           	psect	cstackCOMMON
   253  0070                     __pcstackCOMMON:	
   254  0070                     ?_Lcd_Port:	
   255  0070                     ?_Lcd_Cmd:	
   256                           ; 0 bytes @ 0x0
   257                           
   258  0070                     ?_Lcd_Init:	
   259                           ; 0 bytes @ 0x0
   260                           
   261  0070                     ?_Lcd_Write_Char:	
   262                           ; 0 bytes @ 0x0
   263                           
   264  0070                     ?_Lcd_Write_String:	
   265                           ; 0 bytes @ 0x0
   266                           
   267  0070                     ?_echo:	
   268                           ; 0 bytes @ 0x0
   269                           
   270  0070                     ?_main:	
   271                           ; 0 bytes @ 0x0
   272                           
   273  0070                     ?_Lcd_Clear:	
   274                           ; 0 bytes @ 0x0
   275                           
   276  0070                     ?___ftpack:	
   277                           ; 2 bytes @ 0x0
   278                           
   279  0070                     ___ftpack@arg:	
   280                           ; 3 bytes @ 0x0
   281                           
   282                           
   283                           ; 3 bytes @ 0x0
   284  0070                     	ds	3
   285  0073                     ___ftpack@exp:	
   286                           
   287                           ; 1 bytes @ 0x3
   288  0073                     	ds	1
   289  0074                     ___ftpack@sign:	
   290                           
   291                           ; 1 bytes @ 0x4
   292  0074                     	ds	1
   293  0075                     ??___ftpack:	
   294                           
   295                           ; 0 bytes @ 0x5
   296  0075                     	ds	3
   297  0078                     ?___awtoft:	
   298  0078                     ___awtoft@c:	
   299                           ; 3 bytes @ 0x8
   300                           
   301                           
   302                           ; 2 bytes @ 0x8
   303  0078                     	ds	3
   304  007B                     ??___awtoft:	
   305                           
   306                           ; 0 bytes @ 0xB
   307  007B                     	ds	2
   308  007D                     ___awtoft@sign:	
   309                           
   310                           ; 1 bytes @ 0xD
   311  007D                     	ds	1
   312                           
   313                           	psect	cstackBANK0
   314  0020                     __pcstackBANK0:	
   315  0020                     ?___ftdiv:	
   316  0020                     ___ftdiv@f2:	
   317                           ; 3 bytes @ 0x0
   318                           
   319                           
   320                           ; 3 bytes @ 0x0
   321  0020                     	ds	3
   322  0023                     ___ftdiv@f1:	
   323                           
   324                           ; 3 bytes @ 0x3
   325  0023                     	ds	3
   326  0026                     ??___ftdiv:	
   327                           
   328                           ; 0 bytes @ 0x6
   329  0026                     	ds	4
   330  002A                     ___ftdiv@cntr:	
   331                           
   332                           ; 1 bytes @ 0xA
   333  002A                     	ds	1
   334  002B                     ___ftdiv@f3:	
   335                           
   336                           ; 3 bytes @ 0xB
   337  002B                     	ds	3
   338  002E                     ___ftdiv@exp:	
   339                           
   340                           ; 1 bytes @ 0xE
   341  002E                     	ds	1
   342  002F                     ___ftdiv@sign:	
   343                           
   344                           ; 1 bytes @ 0xF
   345  002F                     	ds	1
   346  0030                     ?___fttol:	
   347  0030                     ___fttol@f1:	
   348                           ; 4 bytes @ 0x10
   349                           
   350                           
   351                           ; 3 bytes @ 0x10
   352  0030                     	ds	4
   353  0034                     ??___fttol:	
   354                           
   355                           ; 0 bytes @ 0x14
   356  0034                     	ds	4
   357  0038                     ___fttol@sign1:	
   358                           
   359                           ; 1 bytes @ 0x18
   360  0038                     	ds	1
   361  0039                     ___fttol@lval:	
   362                           
   363                           ; 4 bytes @ 0x19
   364  0039                     	ds	4
   365  003D                     ___fttol@exp1:	
   366                           
   367                           ; 1 bytes @ 0x1D
   368  003D                     	ds	1
   369  003E                     ??_echo:	
   370                           
   371                           ; 0 bytes @ 0x1E
   372  003E                     	ds	6
   373  0044                     ??_Lcd_Port:	
   374  0044                     ?___awdiv:	
   375                           ; 0 bytes @ 0x24
   376                           
   377  0044                     ?___awmod:	
   378                           ; 2 bytes @ 0x24
   379                           
   380  0044                     Lcd_Port@a:	
   381                           ; 2 bytes @ 0x24
   382                           
   383  0044                     ___awdiv@divisor:	
   384                           ; 1 bytes @ 0x24
   385                           
   386  0044                     ___awmod@divisor:	
   387                           ; 2 bytes @ 0x24
   388                           
   389                           
   390                           ; 2 bytes @ 0x24
   391  0044                     	ds	1
   392  0045                     ??_Lcd_Cmd:	
   393  0045                     ??_Lcd_Write_Char:	
   394                           ; 0 bytes @ 0x25
   395                           
   396                           
   397                           ; 0 bytes @ 0x25
   398  0045                     	ds	1
   399  0046                     Lcd_Write_Char@temp:	
   400  0046                     ___awdiv@dividend:	
   401                           ; 1 bytes @ 0x26
   402                           
   403  0046                     ___awmod@dividend:	
   404                           ; 2 bytes @ 0x26
   405                           
   406                           
   407                           ; 2 bytes @ 0x26
   408  0046                     	ds	1
   409  0047                     Lcd_Cmd@a:	
   410  0047                     Lcd_Write_Char@y:	
   411                           ; 1 bytes @ 0x27
   412                           
   413                           
   414                           ; 1 bytes @ 0x27
   415  0047                     	ds	1
   416  0048                     ??_Lcd_Clear:	
   417  0048                     ?_Lcd_Set_Cursor:	
   418                           ; 0 bytes @ 0x28
   419                           
   420  0048                     ??_Lcd_Init:	
   421                           ; 0 bytes @ 0x28
   422                           
   423  0048                     ??___awdiv:	
   424                           ; 0 bytes @ 0x28
   425                           
   426  0048                     ??___awmod:	
   427                           ; 0 bytes @ 0x28
   428                           
   429  0048                     Lcd_Set_Cursor@b:	
   430                           ; 0 bytes @ 0x28
   431                           
   432  0048                     Lcd_Write_Char@a:	
   433                           ; 1 bytes @ 0x28
   434                           
   435                           
   436                           ; 1 bytes @ 0x28
   437  0048                     	ds	1
   438  0049                     ??_Lcd_Write_String:	
   439                           
   440                           ; 0 bytes @ 0x29
   441  0049                     	ds	1
   442                           
   443                           	psect	maintext
   444  001B                     __pmaintext:	
   445 ;;
   446 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   447 ;;
   448 ;; *************** function _main *****************
   449 ;; Defined at:
   450 ;;		line 45 in file "main.c"
   451 ;; Parameters:    Size  Location     Type
   452 ;;		None
   453 ;; Auto vars:     Size  Location     Type
   454 ;;		None
   455 ;; Return value:  Size  Location     Type
   456 ;;		None               void
   457 ;; Registers used:
   458 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   459 ;; Tracked objects:
   460 ;;		On entry : 17F/0
   461 ;;		On exit  : 0/0
   462 ;;		Unchanged: 0/0
   463 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   464 ;;      Params:         0       0       0       0       0
   465 ;;      Locals:         0       0       0       0       0
   466 ;;      Temps:          0       0       3       0       0
   467 ;;      Totals:         0       0       3       0       0
   468 ;;Total ram usage:        3 bytes
   469 ;; Hardware stack levels required when called:    6
   470 ;; This function calls:
   471 ;;		_Lcd_Clear
   472 ;;		_Lcd_Init
   473 ;;		_Lcd_Set_Cursor
   474 ;;		_Lcd_Write_Char
   475 ;;		_Lcd_Write_String
   476 ;;		___awdiv
   477 ;;		___awmod
   478 ;; This function is called by:
   479 ;;		Startup code after reset
   480 ;; This function uses a non-reentrant model
   481 ;;
   482                           
   483                           
   484                           ;psect for function _main
   485  001B                     _main:	
   486                           
   487                           ;main.c: 47: TRISB = 0b00010000;
   488                           
   489                           ;incstack = 0
   490                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   491  001B  3010               	movlw	16
   492  001C  1683               	bsf	3,5	;RP0=1, select bank1
   493  001D  1303               	bcf	3,6	;RP1=0, select bank1
   494  001E  0086               	movwf	6	;volatile
   495                           
   496                           ;main.c: 48: TRISD = 0x00;
   497  001F  0188               	clrf	8	;volatile
   498                           
   499                           ;main.c: 49: GIE = 1;
   500  0020  178B               	bsf	11,7	;volatile
   501                           
   502                           ;main.c: 50: RBIF = 0;
   503  0021  100B               	bcf	11,0	;volatile
   504                           
   505                           ;main.c: 51: RBIE = 1;
   506  0022  158B               	bsf	11,3	;volatile
   507                           
   508                           ;main.c: 53: Lcd_Init();
   509  0023  120A  118A  2426  120A  118A  	fcall	_Lcd_Init
   510                           
   511                           ;main.c: 55: Lcd_Set_Cursor(1,1);
   512  0028  1283               	bcf	3,5	;RP0=0, select bank0
   513  0029  1303               	bcf	3,6	;RP1=0, select bank0
   514  002A  01C8               	clrf	Lcd_Set_Cursor@b
   515  002B  0AC8               	incf	Lcd_Set_Cursor@b,f
   516  002C  3001               	movlw	1
   517  002D  120A  118A  2487  120A  118A  	fcall	_Lcd_Set_Cursor
   518                           
   519                           ;main.c: 56: Lcd_Write_String("Developed By");
   520  0032  300E               	movlw	(STR_1-__stringbase)& (0+255)
   521  0033  120A  118A  25A4  120A  118A  	fcall	_Lcd_Write_String
   522                           
   523                           ;main.c: 57: Lcd_Set_Cursor(2,1);
   524  0038  1283               	bcf	3,5	;RP0=0, select bank0
   525  0039  1303               	bcf	3,6	;RP1=0, select bank0
   526  003A  01C8               	clrf	Lcd_Set_Cursor@b
   527  003B  0AC8               	incf	Lcd_Set_Cursor@b,f
   528  003C  3002               	movlw	2
   529  003D  120A  118A  2487  120A  118A  	fcall	_Lcd_Set_Cursor
   530                           
   531                           ;main.c: 58: Lcd_Write_String("electroSome");
   532  0042  3027               	movlw	(STR_2-__stringbase)& (0+255)
   533  0043  120A  118A  25A4  120A  118A  	fcall	_Lcd_Write_String
   534                           
   535                           ;main.c: 60: _delay((unsigned long)((3000)*(8000000/4000.0)));
   536  0048  301F               	movlw	31
   537  0049  1683               	bsf	3,5	;RP0=1, select bank1
   538  004A  1303               	bcf	3,6	;RP1=0, select bank1
   539  004B  00A8               	movwf	(??_main^(0+128)+2)
   540  004C  3071               	movlw	113
   541  004D  00A7               	movwf	(??_main^(0+128)+1)
   542  004E  303B               	movlw	59
   543  004F  00A6               	movwf	??_main^(0+128)
   544  0050                     u1507:	
   545  0050  0BA6               	decfsz	??_main^(0+128),f
   546  0051  2850               	goto	u1507
   547  0052  0BA7               	decfsz	(??_main^(0+128)+1),f
   548  0053  2850               	goto	u1507
   549  0054  0BA8               	decfsz	(??_main^(0+128)+2),f
   550  0055  2850               	goto	u1507
   551  0056  0000               	nop
   552                           
   553                           ;main.c: 61: Lcd_Clear();
   554  0057  120A  118A  261D  120A  118A  	fcall	_Lcd_Clear
   555                           
   556                           ;main.c: 63: T1CON = 0x10;
   557  005C  3010               	movlw	16
   558  005D  1283               	bcf	3,5	;RP0=0, select bank0
   559  005E  1303               	bcf	3,6	;RP1=0, select bank0
   560  005F  0090               	movwf	16	;volatile
   561  0060                     l1458:	
   562                           ;main.c: 65: while(1)
   563                           
   564                           
   565                           ;main.c: 66: {
   566                           ;main.c: 67: TMR1H = 0;
   567  0060  1283               	bcf	3,5	;RP0=0, select bank0
   568  0061  1303               	bcf	3,6	;RP1=0, select bank0
   569  0062  018F               	clrf	15	;volatile
   570                           
   571                           ;main.c: 68: TMR1L = 0;
   572  0063  018E               	clrf	14	;volatile
   573                           
   574                           ;main.c: 70: RB0 = 1;
   575  0064  1406               	bsf	6,0	;volatile
   576                           
   577                           ;main.c: 71: _delay((unsigned long)((10)*(8000000/4000000.0)));
   578  0065  3006               	movlw	6
   579  0066  1683               	bsf	3,5	;RP0=1, select bank1
   580  0067  1303               	bcf	3,6	;RP1=0, select bank1
   581  0068  00A6               	movwf	??_main^(0+128)
   582  0069                     u1517:	
   583  0069  0BA6               	decfsz	??_main^(0+128),f
   584  006A  2869               	goto	u1517
   585  006B  0000               	nop
   586                           
   587                           ;main.c: 72: RB0 = 0;
   588  006C  1283               	bcf	3,5	;RP0=0, select bank0
   589  006D  1303               	bcf	3,6	;RP1=0, select bank0
   590  006E  1006               	bcf	6,0	;volatile
   591                           
   592                           ;main.c: 74: _delay((unsigned long)((100)*(8000000/4000.0)));
   593  006F  3002               	movlw	2
   594  0070  1683               	bsf	3,5	;RP0=1, select bank1
   595  0071  1303               	bcf	3,6	;RP1=0, select bank1
   596  0072  00A8               	movwf	(??_main^(0+128)+2)
   597  0073  3004               	movlw	4
   598  0074  00A7               	movwf	(??_main^(0+128)+1)
   599  0075  30BA               	movlw	186
   600  0076  00A6               	movwf	??_main^(0+128)
   601  0077                     u1527:	
   602  0077  0BA6               	decfsz	??_main^(0+128),f
   603  0078  2877               	goto	u1527
   604  0079  0BA7               	decfsz	(??_main^(0+128)+1),f
   605  007A  2877               	goto	u1527
   606  007B  0BA8               	decfsz	(??_main^(0+128)+2),f
   607  007C  2877               	goto	u1527
   608  007D  0000               	nop
   609                           
   610                           ;main.c: 75: a = a + 1;
   611  007E  1283               	bcf	3,5	;RP0=0, select bank0
   612  007F  1303               	bcf	3,6	;RP1=0, select bank0
   613  0080  084A               	movf	_a,w
   614  0081  3E01               	addlw	1
   615  0082  00CA               	movwf	_a
   616  0083  084B               	movf	_a+1,w
   617  0084  1803               	skipnc
   618  0085  3E01               	addlw	1
   619  0086  3E00               	addlw	0
   620  0087  00CB               	movwf	_a+1
   621                           
   622                           ;main.c: 77: if(a>=2 && a<=400)
   623  0088  084B               	movf	_a+1,w
   624  0089  3A80               	xorlw	128
   625  008A  00FF               	movwf	127
   626  008B  3080               	movlw	128
   627  008C  027F               	subwf	127,w
   628  008D  1D03               	skipz
   629  008E  2891               	goto	u1485
   630  008F  3002               	movlw	2
   631  0090  024A               	subwf	_a,w
   632  0091                     u1485:	
   633  0091  1C03               	skipc
   634  0092  296F               	goto	l1498
   635  0093  1283               	bcf	3,5	;RP0=0, select bank0
   636  0094  1303               	bcf	3,6	;RP1=0, select bank0
   637  0095  084B               	movf	_a+1,w
   638  0096  3A80               	xorlw	128
   639  0097  00FF               	movwf	127
   640  0098  3081               	movlw	129
   641  0099  027F               	subwf	127,w
   642  009A  1D03               	skipz
   643  009B  289E               	goto	u1495
   644  009C  3091               	movlw	145
   645  009D  024A               	subwf	_a,w
   646  009E                     u1495:	
   647  009E  1803               	skipnc
   648  009F  296F               	goto	l1498
   649                           
   650                           ;main.c: 78: {
   651                           ;main.c: 79: Lcd_Clear();
   652  00A0  120A  118A  261D  120A  118A  	fcall	_Lcd_Clear
   653                           
   654                           ;main.c: 80: Lcd_Set_Cursor(1,1);
   655  00A5  1283               	bcf	3,5	;RP0=0, select bank0
   656  00A6  1303               	bcf	3,6	;RP1=0, select bank0
   657  00A7  01C8               	clrf	Lcd_Set_Cursor@b
   658  00A8  0AC8               	incf	Lcd_Set_Cursor@b,f
   659  00A9  3001               	movlw	1
   660  00AA  120A  118A  2487  120A  118A  	fcall	_Lcd_Set_Cursor
   661                           
   662                           ;main.c: 81: Lcd_Write_String("Distance = ");
   663  00AF  301B               	movlw	(STR_3-__stringbase)& (0+255)
   664  00B0  120A  118A  25A4  120A  118A  	fcall	_Lcd_Write_String
   665                           
   666                           ;main.c: 83: Lcd_Set_Cursor(1,14);
   667  00B5  300E               	movlw	14
   668  00B6  1683               	bsf	3,5	;RP0=1, select bank1
   669  00B7  1303               	bcf	3,6	;RP1=0, select bank1
   670  00B8  00A6               	movwf	??_main^(0+128)
   671  00B9  0826               	movf	??_main^(0+128),w
   672  00BA  1283               	bcf	3,5	;RP0=0, select bank0
   673  00BB  1303               	bcf	3,6	;RP1=0, select bank0
   674  00BC  00C8               	movwf	Lcd_Set_Cursor@b
   675  00BD  3001               	movlw	1
   676  00BE  120A  118A  2487  120A  118A  	fcall	_Lcd_Set_Cursor
   677                           
   678                           ;main.c: 84: Lcd_Write_Char(a%10 + 48);
   679  00C3  300A               	movlw	10
   680  00C4  1283               	bcf	3,5	;RP0=0, select bank0
   681  00C5  1303               	bcf	3,6	;RP1=0, select bank0
   682  00C6  00C4               	movwf	___awmod@divisor
   683  00C7  3000               	movlw	0
   684  00C8  00C5               	movwf	___awmod@divisor+1
   685  00C9  084B               	movf	_a+1,w
   686  00CA  01C7               	clrf	___awmod@dividend+1
   687  00CB  07C7               	addwf	___awmod@dividend+1,f
   688  00CC  084A               	movf	_a,w
   689  00CD  01C6               	clrf	___awmod@dividend
   690  00CE  07C6               	addwf	___awmod@dividend,f
   691  00CF  120A  118A  23C1  120A  118A  	fcall	___awmod
   692  00D4  1283               	bcf	3,5	;RP0=0, select bank0
   693  00D5  1303               	bcf	3,6	;RP1=0, select bank0
   694  00D6  0844               	movf	?___awmod,w
   695  00D7  3E30               	addlw	48
   696  00D8  120A  118A  256B  120A  118A  	fcall	_Lcd_Write_Char
   697                           
   698                           ;main.c: 86: a = a/10;
   699  00DD  300A               	movlw	10
   700  00DE  1283               	bcf	3,5	;RP0=0, select bank0
   701  00DF  1303               	bcf	3,6	;RP1=0, select bank0
   702  00E0  00C4               	movwf	___awdiv@divisor
   703  00E1  3000               	movlw	0
   704  00E2  00C5               	movwf	___awdiv@divisor+1
   705  00E3  084B               	movf	_a+1,w
   706  00E4  01C7               	clrf	___awdiv@dividend+1
   707  00E5  07C7               	addwf	___awdiv@dividend+1,f
   708  00E6  084A               	movf	_a,w
   709  00E7  01C6               	clrf	___awdiv@dividend
   710  00E8  07C6               	addwf	___awdiv@dividend,f
   711  00E9  120A  118A  22D9  120A  118A  	fcall	___awdiv
   712  00EE  1283               	bcf	3,5	;RP0=0, select bank0
   713  00EF  1303               	bcf	3,6	;RP1=0, select bank0
   714  00F0  0845               	movf	?___awdiv+1,w
   715  00F1  01CB               	clrf	_a+1
   716  00F2  07CB               	addwf	_a+1,f
   717  00F3  0844               	movf	?___awdiv,w
   718  00F4  01CA               	clrf	_a
   719  00F5  07CA               	addwf	_a,f
   720                           
   721                           ;main.c: 87: Lcd_Set_Cursor(1,13);
   722  00F6  300D               	movlw	13
   723  00F7  1683               	bsf	3,5	;RP0=1, select bank1
   724  00F8  1303               	bcf	3,6	;RP1=0, select bank1
   725  00F9  00A6               	movwf	??_main^(0+128)
   726  00FA  0826               	movf	??_main^(0+128),w
   727  00FB  1283               	bcf	3,5	;RP0=0, select bank0
   728  00FC  1303               	bcf	3,6	;RP1=0, select bank0
   729  00FD  00C8               	movwf	Lcd_Set_Cursor@b
   730  00FE  3001               	movlw	1
   731  00FF  120A  118A  2487  120A  118A  	fcall	_Lcd_Set_Cursor
   732                           
   733                           ;main.c: 88: Lcd_Write_Char(a%10 + 48);
   734  0104  300A               	movlw	10
   735  0105  1283               	bcf	3,5	;RP0=0, select bank0
   736  0106  1303               	bcf	3,6	;RP1=0, select bank0
   737  0107  00C4               	movwf	___awmod@divisor
   738  0108  3000               	movlw	0
   739  0109  00C5               	movwf	___awmod@divisor+1
   740  010A  084B               	movf	_a+1,w
   741  010B  01C7               	clrf	___awmod@dividend+1
   742  010C  07C7               	addwf	___awmod@dividend+1,f
   743  010D  084A               	movf	_a,w
   744  010E  01C6               	clrf	___awmod@dividend
   745  010F  07C6               	addwf	___awmod@dividend,f
   746  0110  120A  118A  23C1  120A  118A  	fcall	___awmod
   747  0115  1283               	bcf	3,5	;RP0=0, select bank0
   748  0116  1303               	bcf	3,6	;RP1=0, select bank0
   749  0117  0844               	movf	?___awmod,w
   750  0118  3E30               	addlw	48
   751  0119  120A  118A  256B  120A  118A  	fcall	_Lcd_Write_Char
   752                           
   753                           ;main.c: 90: a = a/10;
   754  011E  300A               	movlw	10
   755  011F  1283               	bcf	3,5	;RP0=0, select bank0
   756  0120  1303               	bcf	3,6	;RP1=0, select bank0
   757  0121  00C4               	movwf	___awdiv@divisor
   758  0122  3000               	movlw	0
   759  0123  00C5               	movwf	___awdiv@divisor+1
   760  0124  084B               	movf	_a+1,w
   761  0125  01C7               	clrf	___awdiv@dividend+1
   762  0126  07C7               	addwf	___awdiv@dividend+1,f
   763  0127  084A               	movf	_a,w
   764  0128  01C6               	clrf	___awdiv@dividend
   765  0129  07C6               	addwf	___awdiv@dividend,f
   766  012A  120A  118A  22D9  120A  118A  	fcall	___awdiv
   767  012F  1283               	bcf	3,5	;RP0=0, select bank0
   768  0130  1303               	bcf	3,6	;RP1=0, select bank0
   769  0131  0845               	movf	?___awdiv+1,w
   770  0132  01CB               	clrf	_a+1
   771  0133  07CB               	addwf	_a+1,f
   772  0134  0844               	movf	?___awdiv,w
   773  0135  01CA               	clrf	_a
   774  0136  07CA               	addwf	_a,f
   775                           
   776                           ;main.c: 91: Lcd_Set_Cursor(1,12);
   777  0137  300C               	movlw	12
   778  0138  1683               	bsf	3,5	;RP0=1, select bank1
   779  0139  1303               	bcf	3,6	;RP1=0, select bank1
   780  013A  00A6               	movwf	??_main^(0+128)
   781  013B  0826               	movf	??_main^(0+128),w
   782  013C  1283               	bcf	3,5	;RP0=0, select bank0
   783  013D  1303               	bcf	3,6	;RP1=0, select bank0
   784  013E  00C8               	movwf	Lcd_Set_Cursor@b
   785  013F  3001               	movlw	1
   786  0140  120A  118A  2487  120A  118A  	fcall	_Lcd_Set_Cursor
   787                           
   788                           ;main.c: 92: Lcd_Write_Char(a%10 + 48);
   789  0145  300A               	movlw	10
   790  0146  1283               	bcf	3,5	;RP0=0, select bank0
   791  0147  1303               	bcf	3,6	;RP1=0, select bank0
   792  0148  00C4               	movwf	___awmod@divisor
   793  0149  3000               	movlw	0
   794  014A  00C5               	movwf	___awmod@divisor+1
   795  014B  084B               	movf	_a+1,w
   796  014C  01C7               	clrf	___awmod@dividend+1
   797  014D  07C7               	addwf	___awmod@dividend+1,f
   798  014E  084A               	movf	_a,w
   799  014F  01C6               	clrf	___awmod@dividend
   800  0150  07C6               	addwf	___awmod@dividend,f
   801  0151  120A  118A  23C1  120A  118A  	fcall	___awmod
   802  0156  1283               	bcf	3,5	;RP0=0, select bank0
   803  0157  1303               	bcf	3,6	;RP1=0, select bank0
   804  0158  0844               	movf	?___awmod,w
   805  0159  3E30               	addlw	48
   806  015A  120A  118A  256B  120A  118A  	fcall	_Lcd_Write_Char
   807                           
   808                           ;main.c: 94: Lcd_Set_Cursor(1,15);
   809  015F  300F               	movlw	15
   810  0160  1683               	bsf	3,5	;RP0=1, select bank1
   811  0161  1303               	bcf	3,6	;RP1=0, select bank1
   812  0162  00A6               	movwf	??_main^(0+128)
   813  0163  0826               	movf	??_main^(0+128),w
   814  0164  1283               	bcf	3,5	;RP0=0, select bank0
   815  0165  1303               	bcf	3,6	;RP1=0, select bank0
   816  0166  00C8               	movwf	Lcd_Set_Cursor@b
   817  0167  3001               	movlw	1
   818  0168  120A  118A  2487  120A  118A  	fcall	_Lcd_Set_Cursor
   819                           
   820                           ;main.c: 95: Lcd_Write_String("cm");
   821  016D  3033               	movlw	(STR_4-__stringbase)& (0+255)
   822  016E  297F               	goto	L1
   823  016F                     l1498:	
   824                           ;main.c: 96: }
   825                           
   826                           
   827                           ;main.c: 97: else
   828                           ;main.c: 98: {
   829                           ;main.c: 99: Lcd_Clear();
   830  016F  120A  118A  261D  120A  118A  	fcall	_Lcd_Clear
   831                           
   832                           ;main.c: 100: Lcd_Set_Cursor(1,1);
   833  0174  1283               	bcf	3,5	;RP0=0, select bank0
   834  0175  1303               	bcf	3,6	;RP1=0, select bank0
   835  0176  01C8               	clrf	Lcd_Set_Cursor@b
   836  0177  0AC8               	incf	Lcd_Set_Cursor@b,f
   837  0178  3001               	movlw	1
   838  0179  120A  118A  2487  120A  118A  	fcall	_Lcd_Set_Cursor
   839                           
   840                           ;main.c: 101: Lcd_Write_String("Out of Range");
   841  017E  3001               	movlw	(STR_5-__stringbase)& (0+255)
   842  017F                     L1:	
   843  017F  120A  118A  25A4  120A  118A  	fcall	_Lcd_Write_String
   844                           
   845                           ;main.c: 102: }
   846                           ;main.c: 103: _delay((unsigned long)((400)*(8000000/4000.0)));
   847  0184  3005               	movlw	5
   848  0185  1683               	bsf	3,5	;RP0=1, select bank1
   849  0186  1303               	bcf	3,6	;RP1=0, select bank1
   850  0187  00A8               	movwf	(??_main^(0+128)+2)
   851  0188  300F               	movlw	15
   852  0189  00A7               	movwf	(??_main^(0+128)+1)
   853  018A  30F4               	movlw	244
   854  018B  00A6               	movwf	??_main^(0+128)
   855  018C                     u1537:	
   856  018C  0BA6               	decfsz	??_main^(0+128),f
   857  018D  298C               	goto	u1537
   858  018E  0BA7               	decfsz	(??_main^(0+128)+1),f
   859  018F  298C               	goto	u1537
   860  0190  0BA8               	decfsz	(??_main^(0+128)+2),f
   861  0191  298C               	goto	u1537
   862  0192  2860               	goto	l1458
   863  0193                     __end_of_main:	
   864                           
   865                           	psect	text1
   866  03C1                     __ptext1:	
   867 ;; *************** function ___awmod *****************
   868 ;; Defined at:
   869 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\awmod.c"
   870 ;; Parameters:    Size  Location     Type
   871 ;;  divisor         2   36[BANK0 ] int 
   872 ;;  dividend        2   38[BANK0 ] int 
   873 ;; Auto vars:     Size  Location     Type
   874 ;;  sign            1    1[BANK1 ] unsigned char 
   875 ;;  counter         1    0[BANK1 ] unsigned char 
   876 ;; Return value:  Size  Location     Type
   877 ;;                  2   36[BANK0 ] int 
   878 ;; Registers used:
   879 ;;		wreg, status,2, status,0
   880 ;; Tracked objects:
   881 ;;		On entry : 0/0
   882 ;;		On exit  : 0/0
   883 ;;		Unchanged: 0/0
   884 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   885 ;;      Params:         0       4       0       0       0
   886 ;;      Locals:         0       0       2       0       0
   887 ;;      Temps:          0       1       0       0       0
   888 ;;      Totals:         0       5       2       0       0
   889 ;;Total ram usage:        7 bytes
   890 ;; Hardware stack levels used:    1
   891 ;; Hardware stack levels required when called:    3
   892 ;; This function calls:
   893 ;;		Nothing
   894 ;; This function is called by:
   895 ;;		_main
   896 ;; This function uses a non-reentrant model
   897 ;;
   898                           
   899                           
   900                           ;psect for function ___awmod
   901  03C1                     ___awmod:	
   902                           
   903                           ;incstack = 0
   904                           ; Regs used in ___awmod: [wreg+status,2+status,0]
   905  03C1  1683               	bsf	3,5	;RP0=1, select bank1
   906  03C2  1303               	bcf	3,6	;RP1=0, select bank1
   907  03C3  01A1               	clrf	___awmod@sign^(0+128)
   908  03C4  1283               	bcf	3,5	;RP0=0, select bank0
   909  03C5  1303               	bcf	3,6	;RP1=0, select bank0
   910  03C6  1FC7               	btfss	___awmod@dividend+1,7
   911  03C7  2BD1               	goto	l1398
   912  03C8  09C6               	comf	___awmod@dividend,f
   913  03C9  09C7               	comf	___awmod@dividend+1,f
   914  03CA  0AC6               	incf	___awmod@dividend,f
   915  03CB  1903               	skipnz
   916  03CC  0AC7               	incf	___awmod@dividend+1,f
   917  03CD  1683               	bsf	3,5	;RP0=1, select bank1
   918  03CE  1303               	bcf	3,6	;RP1=0, select bank1
   919  03CF  01A1               	clrf	___awmod@sign^(0+128)
   920  03D0  0AA1               	incf	___awmod@sign^(0+128),f
   921  03D1                     l1398:	
   922  03D1  1283               	bcf	3,5	;RP0=0, select bank0
   923  03D2  1FC5               	btfss	___awmod@divisor+1,7
   924  03D3  2BD9               	goto	l1402
   925  03D4  09C4               	comf	___awmod@divisor,f
   926  03D5  09C5               	comf	___awmod@divisor+1,f
   927  03D6  0AC4               	incf	___awmod@divisor,f
   928  03D7  1903               	skipnz
   929  03D8  0AC5               	incf	___awmod@divisor+1,f
   930  03D9                     l1402:	
   931  03D9  0845               	movf	___awmod@divisor+1,w
   932  03DA  0444               	iorwf	___awmod@divisor,w
   933  03DB  1903               	skipnz
   934  03DC  2C10               	goto	l1420
   935  03DD  1683               	bsf	3,5	;RP0=1, select bank1
   936  03DE  1303               	bcf	3,6	;RP1=0, select bank1
   937  03DF  01A0               	clrf	___awmod@counter^(0+128)
   938  03E0  0AA0               	incf	___awmod@counter^(0+128),f
   939  03E1                     l1410:	
   940  03E1  1283               	bcf	3,5	;RP0=0, select bank0
   941  03E2  1303               	bcf	3,6	;RP1=0, select bank0
   942  03E3  1BC5               	btfsc	___awmod@divisor+1,7
   943  03E4  2BF4               	goto	l1412
   944  03E5  3001               	movlw	1
   945  03E6  1283               	bcf	3,5	;RP0=0, select bank0
   946  03E7                     u1425:	
   947  03E7  1003               	clrc
   948  03E8  0DC4               	rlf	___awmod@divisor,f
   949  03E9  0DC5               	rlf	___awmod@divisor+1,f
   950  03EA  3EFF               	addlw	-1
   951  03EB  1D03               	skipz
   952  03EC  2BE7               	goto	u1425
   953  03ED  3001               	movlw	1
   954  03EE  00C8               	movwf	??___awmod
   955  03EF  0848               	movf	??___awmod,w
   956  03F0  1683               	bsf	3,5	;RP0=1, select bank1
   957  03F1  1303               	bcf	3,6	;RP1=0, select bank1
   958  03F2  07A0               	addwf	___awmod@counter^(0+128),f
   959  03F3  2BE1               	goto	l1410
   960  03F4                     l1412:	
   961  03F4  1283               	bcf	3,5	;RP0=0, select bank0
   962  03F5  0845               	movf	___awmod@divisor+1,w
   963  03F6  0247               	subwf	___awmod@dividend+1,w
   964  03F7  1D03               	skipz
   965  03F8  2BFB               	goto	u1445
   966  03F9  0844               	movf	___awmod@divisor,w
   967  03FA  0246               	subwf	___awmod@dividend,w
   968  03FB                     u1445:	
   969  03FB  1C03               	skipc
   970  03FC  2C03               	goto	l1416
   971  03FD  0844               	movf	___awmod@divisor,w
   972  03FE  02C6               	subwf	___awmod@dividend,f
   973  03FF  0845               	movf	___awmod@divisor+1,w
   974  0400  1C03               	skipc
   975  0401  03C7               	decf	___awmod@dividend+1,f
   976  0402  02C7               	subwf	___awmod@dividend+1,f
   977  0403                     l1416:	
   978  0403  3001               	movlw	1
   979  0404                     u1455:	
   980  0404  1003               	clrc
   981  0405  0CC5               	rrf	___awmod@divisor+1,f
   982  0406  0CC4               	rrf	___awmod@divisor,f
   983  0407  3EFF               	addlw	-1
   984  0408  1D03               	skipz
   985  0409  2C04               	goto	u1455
   986  040A  3001               	movlw	1
   987  040B  1683               	bsf	3,5	;RP0=1, select bank1
   988  040C  1303               	bcf	3,6	;RP1=0, select bank1
   989  040D  02A0               	subwf	___awmod@counter^(0+128),f
   990  040E  1D03               	btfss	3,2
   991  040F  2BF4               	goto	l1412
   992  0410                     l1420:	
   993  0410  1683               	bsf	3,5	;RP0=1, select bank1
   994  0411  1303               	bcf	3,6	;RP1=0, select bank1
   995  0412  0821               	movf	___awmod@sign^(0+128),w
   996  0413  1903               	btfsc	3,2
   997  0414  2C1E               	goto	l1424
   998  0415  1283               	bcf	3,5	;RP0=0, select bank0
   999  0416  1303               	bcf	3,6	;RP1=0, select bank0
  1000  0417  09C6               	comf	___awmod@dividend,f
  1001  0418  09C7               	comf	___awmod@dividend+1,f
  1002  0419  0AC6               	incf	___awmod@dividend,f
  1003  041A  1903               	skipnz
  1004  041B  0AC7               	incf	___awmod@dividend+1,f
  1005  041C  1683               	bsf	3,5	;RP0=1, select bank1
  1006  041D  1303               	bcf	3,6	;RP1=0, select bank1
  1007  041E                     l1424:	
  1008  041E  1283               	bcf	3,5	;RP0=0, select bank0
  1009  041F  0847               	movf	___awmod@dividend+1,w
  1010  0420  01C5               	clrf	?___awmod+1
  1011  0421  07C5               	addwf	?___awmod+1,f
  1012  0422  0846               	movf	___awmod@dividend,w
  1013  0423  01C4               	clrf	?___awmod
  1014  0424  07C4               	addwf	?___awmod,f
  1015  0425  0008               	return
  1016  0426                     __end_of___awmod:	
  1017                           
  1018                           	psect	text2
  1019  02D9                     __ptext2:	
  1020 ;; *************** function ___awdiv *****************
  1021 ;; Defined at:
  1022 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\awdiv.c"
  1023 ;; Parameters:    Size  Location     Type
  1024 ;;  divisor         2   36[BANK0 ] int 
  1025 ;;  dividend        2   38[BANK0 ] int 
  1026 ;; Auto vars:     Size  Location     Type
  1027 ;;  quotient        2    2[BANK1 ] int 
  1028 ;;  sign            1    1[BANK1 ] unsigned char 
  1029 ;;  counter         1    0[BANK1 ] unsigned char 
  1030 ;; Return value:  Size  Location     Type
  1031 ;;                  2   36[BANK0 ] int 
  1032 ;; Registers used:
  1033 ;;		wreg, status,2, status,0
  1034 ;; Tracked objects:
  1035 ;;		On entry : 0/0
  1036 ;;		On exit  : 0/0
  1037 ;;		Unchanged: 0/0
  1038 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1039 ;;      Params:         0       4       0       0       0
  1040 ;;      Locals:         0       0       4       0       0
  1041 ;;      Temps:          0       1       0       0       0
  1042 ;;      Totals:         0       5       4       0       0
  1043 ;;Total ram usage:        9 bytes
  1044 ;; Hardware stack levels used:    1
  1045 ;; Hardware stack levels required when called:    3
  1046 ;; This function calls:
  1047 ;;		Nothing
  1048 ;; This function is called by:
  1049 ;;		_main
  1050 ;; This function uses a non-reentrant model
  1051 ;;
  1052                           
  1053                           
  1054                           ;psect for function ___awdiv
  1055  02D9                     ___awdiv:	
  1056                           
  1057                           ;incstack = 0
  1058                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1059  02D9  1683               	bsf	3,5	;RP0=1, select bank1
  1060  02DA  1303               	bcf	3,6	;RP1=0, select bank1
  1061  02DB  01A1               	clrf	___awdiv@sign^(0+128)
  1062  02DC  1283               	bcf	3,5	;RP0=0, select bank0
  1063  02DD  1303               	bcf	3,6	;RP1=0, select bank0
  1064  02DE  1FC5               	btfss	___awdiv@divisor+1,7
  1065  02DF  2AE9               	goto	l1048
  1066  02E0  09C4               	comf	___awdiv@divisor,f
  1067  02E1  09C5               	comf	___awdiv@divisor+1,f
  1068  02E2  0AC4               	incf	___awdiv@divisor,f
  1069  02E3  1903               	skipnz
  1070  02E4  0AC5               	incf	___awdiv@divisor+1,f
  1071  02E5  1683               	bsf	3,5	;RP0=1, select bank1
  1072  02E6  1303               	bcf	3,6	;RP1=0, select bank1
  1073  02E7  01A1               	clrf	___awdiv@sign^(0+128)
  1074  02E8  0AA1               	incf	___awdiv@sign^(0+128),f
  1075  02E9                     l1048:	
  1076  02E9  1283               	bcf	3,5	;RP0=0, select bank0
  1077  02EA  1FC7               	btfss	___awdiv@dividend+1,7
  1078  02EB  2AF7               	goto	l1054
  1079  02EC  09C6               	comf	___awdiv@dividend,f
  1080  02ED  09C7               	comf	___awdiv@dividend+1,f
  1081  02EE  0AC6               	incf	___awdiv@dividend,f
  1082  02EF  1903               	skipnz
  1083  02F0  0AC7               	incf	___awdiv@dividend+1,f
  1084  02F1  3001               	movlw	1
  1085  02F2  00C8               	movwf	??___awdiv
  1086  02F3  0848               	movf	??___awdiv,w
  1087  02F4  1683               	bsf	3,5	;RP0=1, select bank1
  1088  02F5  1303               	bcf	3,6	;RP1=0, select bank1
  1089  02F6  06A1               	xorwf	___awdiv@sign^(0+128),f
  1090  02F7                     l1054:	
  1091  02F7  1683               	bsf	3,5	;RP0=1, select bank1
  1092  02F8  1303               	bcf	3,6	;RP1=0, select bank1
  1093  02F9  01A2               	clrf	___awdiv@quotient^(0+128)
  1094  02FA  01A3               	clrf	(___awdiv@quotient+1)^(0+128)
  1095  02FB  1283               	bcf	3,5	;RP0=0, select bank0
  1096  02FC  1303               	bcf	3,6	;RP1=0, select bank0
  1097  02FD  0845               	movf	___awdiv@divisor+1,w
  1098  02FE  0444               	iorwf	___awdiv@divisor,w
  1099  02FF  1903               	skipnz
  1100  0300  2B42               	goto	l1076
  1101  0301  1683               	bsf	3,5	;RP0=1, select bank1
  1102  0302  1303               	bcf	3,6	;RP1=0, select bank1
  1103  0303  01A0               	clrf	___awdiv@counter^(0+128)
  1104  0304  0AA0               	incf	___awdiv@counter^(0+128),f
  1105  0305                     l1064:	
  1106  0305  1283               	bcf	3,5	;RP0=0, select bank0
  1107  0306  1303               	bcf	3,6	;RP1=0, select bank0
  1108  0307  1BC5               	btfsc	___awdiv@divisor+1,7
  1109  0308  2B18               	goto	l1066
  1110  0309  3001               	movlw	1
  1111  030A  1283               	bcf	3,5	;RP0=0, select bank0
  1112  030B                     u895:	
  1113  030B  1003               	clrc
  1114  030C  0DC4               	rlf	___awdiv@divisor,f
  1115  030D  0DC5               	rlf	___awdiv@divisor+1,f
  1116  030E  3EFF               	addlw	-1
  1117  030F  1D03               	skipz
  1118  0310  2B0B               	goto	u895
  1119  0311  3001               	movlw	1
  1120  0312  00C8               	movwf	??___awdiv
  1121  0313  0848               	movf	??___awdiv,w
  1122  0314  1683               	bsf	3,5	;RP0=1, select bank1
  1123  0315  1303               	bcf	3,6	;RP1=0, select bank1
  1124  0316  07A0               	addwf	___awdiv@counter^(0+128),f
  1125  0317  2B05               	goto	l1064
  1126  0318                     l1066:	
  1127  0318  3001               	movlw	1
  1128  0319  1683               	bsf	3,5	;RP0=1, select bank1
  1129  031A  1303               	bcf	3,6	;RP1=0, select bank1
  1130  031B                     u915:	
  1131  031B  1003               	clrc
  1132  031C  0DA2               	rlf	___awdiv@quotient^(0+128),f
  1133  031D  0DA3               	rlf	(___awdiv@quotient+1)^(0+128),f
  1134  031E  3EFF               	addlw	-1
  1135  031F  1D03               	skipz
  1136  0320  2B1B               	goto	u915
  1137  0321  1283               	bcf	3,5	;RP0=0, select bank0
  1138  0322  1303               	bcf	3,6	;RP1=0, select bank0
  1139  0323  0845               	movf	___awdiv@divisor+1,w
  1140  0324  0247               	subwf	___awdiv@dividend+1,w
  1141  0325  1D03               	skipz
  1142  0326  2B29               	goto	u925
  1143  0327  0844               	movf	___awdiv@divisor,w
  1144  0328  0246               	subwf	___awdiv@dividend,w
  1145  0329                     u925:	
  1146  0329  1C03               	skipc
  1147  032A  2B34               	goto	l1072
  1148  032B  0844               	movf	___awdiv@divisor,w
  1149  032C  02C6               	subwf	___awdiv@dividend,f
  1150  032D  0845               	movf	___awdiv@divisor+1,w
  1151  032E  1C03               	skipc
  1152  032F  03C7               	decf	___awdiv@dividend+1,f
  1153  0330  02C7               	subwf	___awdiv@dividend+1,f
  1154  0331  1683               	bsf	3,5	;RP0=1, select bank1
  1155  0332  1303               	bcf	3,6	;RP1=0, select bank1
  1156  0333  1422               	bsf	___awdiv@quotient^(0+128),0
  1157  0334                     l1072:	
  1158  0334  3001               	movlw	1
  1159  0335  1283               	bcf	3,5	;RP0=0, select bank0
  1160  0336                     u935:	
  1161  0336  1003               	clrc
  1162  0337  0CC5               	rrf	___awdiv@divisor+1,f
  1163  0338  0CC4               	rrf	___awdiv@divisor,f
  1164  0339  3EFF               	addlw	-1
  1165  033A  1D03               	skipz
  1166  033B  2B36               	goto	u935
  1167  033C  3001               	movlw	1
  1168  033D  1683               	bsf	3,5	;RP0=1, select bank1
  1169  033E  1303               	bcf	3,6	;RP1=0, select bank1
  1170  033F  02A0               	subwf	___awdiv@counter^(0+128),f
  1171  0340  1D03               	btfss	3,2
  1172  0341  2B18               	goto	l1066
  1173  0342                     l1076:	
  1174  0342  1683               	bsf	3,5	;RP0=1, select bank1
  1175  0343  1303               	bcf	3,6	;RP1=0, select bank1
  1176  0344  0821               	movf	___awdiv@sign^(0+128),w
  1177  0345  1903               	btfsc	3,2
  1178  0346  2B4C               	goto	l1080
  1179  0347  09A2               	comf	___awdiv@quotient^(0+128),f
  1180  0348  09A3               	comf	(___awdiv@quotient+1)^(0+128),f
  1181  0349  0AA2               	incf	___awdiv@quotient^(0+128),f
  1182  034A  1903               	skipnz
  1183  034B  0AA3               	incf	(___awdiv@quotient+1)^(0+128),f
  1184  034C                     l1080:	
  1185  034C  0823               	movf	(___awdiv@quotient+1)^(0+128),w
  1186  034D  1283               	bcf	3,5	;RP0=0, select bank0
  1187  034E  1303               	bcf	3,6	;RP1=0, select bank0
  1188  034F  01C5               	clrf	?___awdiv+1
  1189  0350  07C5               	addwf	?___awdiv+1,f
  1190  0351  1683               	bsf	3,5	;RP0=1, select bank1
  1191  0352  1303               	bcf	3,6	;RP1=0, select bank1
  1192  0353  0822               	movf	___awdiv@quotient^(0+128),w
  1193  0354  1283               	bcf	3,5	;RP0=0, select bank0
  1194  0355  1303               	bcf	3,6	;RP1=0, select bank0
  1195  0356  01C4               	clrf	?___awdiv
  1196  0357  07C4               	addwf	?___awdiv,f
  1197  0358  0008               	return
  1198  0359                     __end_of___awdiv:	
  1199                           
  1200                           	psect	text3
  1201  05A4                     __ptext3:	
  1202 ;; *************** function _Lcd_Write_String *****************
  1203 ;; Defined at:
  1204 ;;		line 97 in file "lcd.h"
  1205 ;; Parameters:    Size  Location     Type
  1206 ;;  a               1    wreg     PTR unsigned char 
  1207 ;;		 -> STR_5(13), STR_4(3), STR_3(12), STR_2(12), 
  1208 ;;		 -> STR_1(13), 
  1209 ;; Auto vars:     Size  Location     Type
  1210 ;;  a               1    2[BANK1 ] PTR unsigned char 
  1211 ;;		 -> STR_5(13), STR_4(3), STR_3(12), STR_2(12), 
  1212 ;;		 -> STR_1(13), 
  1213 ;;  i               2    0[BANK1 ] int 
  1214 ;; Return value:  Size  Location     Type
  1215 ;;		None               void
  1216 ;; Registers used:
  1217 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1218 ;; Tracked objects:
  1219 ;;		On entry : 0/0
  1220 ;;		On exit  : 0/0
  1221 ;;		Unchanged: 0/0
  1222 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1223 ;;      Params:         0       0       0       0       0
  1224 ;;      Locals:         0       0       3       0       0
  1225 ;;      Temps:          0       0       0       0       0
  1226 ;;      Totals:         0       0       3       0       0
  1227 ;;Total ram usage:        3 bytes
  1228 ;; Hardware stack levels used:    1
  1229 ;; Hardware stack levels required when called:    5
  1230 ;; This function calls:
  1231 ;;		_Lcd_Write_Char
  1232 ;; This function is called by:
  1233 ;;		_main
  1234 ;; This function uses a non-reentrant model
  1235 ;;
  1236                           
  1237                           
  1238                           ;psect for function _Lcd_Write_String
  1239  05A4                     _Lcd_Write_String:	
  1240                           
  1241                           ;incstack = 0
  1242                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1243                           ;Lcd_Write_String@a stored from wreg
  1244  05A4  1683               	bsf	3,5	;RP0=1, select bank1
  1245  05A5  1303               	bcf	3,6	;RP1=0, select bank1
  1246  05A6  00A2               	movwf	Lcd_Write_String@a^(0+128)
  1247                           
  1248                           ;lcd.h: 99: int i;
  1249                           ;lcd.h: 100: for(i=0;a[i]!='\0';i++)
  1250  05A7  01A0               	clrf	Lcd_Write_String@i^(0+128)
  1251  05A8  01A1               	clrf	(Lcd_Write_String@i+1)^(0+128)
  1252  05A9                     l1388:	
  1253  05A9  0820               	movf	Lcd_Write_String@i^(0+128),w
  1254  05AA  0722               	addwf	Lcd_Write_String@a^(0+128),w
  1255  05AB  0084               	movwf	4
  1256  05AC  120A  118A  2530  120A  118A  	fcall	stringdir
  1257  05B1  3800               	iorlw	0
  1258  05B2  1903               	btfsc	3,2
  1259  05B3  0008               	return
  1260                           
  1261                           ;lcd.h: 101: Lcd_Write_Char(a[i]);
  1262  05B4  0820               	movf	Lcd_Write_String@i^(0+128),w
  1263  05B5  0722               	addwf	Lcd_Write_String@a^(0+128),w
  1264  05B6  0084               	movwf	4
  1265  05B7  120A  118A  2530  120A  118A  	fcall	stringdir
  1266  05BC  120A  118A  256B  120A  118A  	fcall	_Lcd_Write_Char
  1267  05C1  3001               	movlw	1
  1268  05C2  1683               	bsf	3,5	;RP0=1, select bank1
  1269  05C3  1303               	bcf	3,6	;RP1=0, select bank1
  1270  05C4  07A0               	addwf	Lcd_Write_String@i^(0+128),f
  1271  05C5  1803               	skipnc
  1272  05C6  0AA1               	incf	(Lcd_Write_String@i+1)^(0+128),f
  1273  05C7  3000               	movlw	0
  1274  05C8  07A1               	addwf	(Lcd_Write_String@i+1)^(0+128),f
  1275  05C9  2DA9               	goto	l1388
  1276  05CA                     __end_of_Lcd_Write_String:	
  1277                           
  1278                           	psect	text4
  1279  056B                     __ptext4:	
  1280 ;; *************** function _Lcd_Write_Char *****************
  1281 ;; Defined at:
  1282 ;;		line 81 in file "lcd.h"
  1283 ;; Parameters:    Size  Location     Type
  1284 ;;  a               1    wreg     unsigned char 
  1285 ;; Auto vars:     Size  Location     Type
  1286 ;;  a               1   40[BANK0 ] unsigned char 
  1287 ;;  y               1   39[BANK0 ] unsigned char 
  1288 ;;  temp            1   38[BANK0 ] unsigned char 
  1289 ;; Return value:  Size  Location     Type
  1290 ;;		None               void
  1291 ;; Registers used:
  1292 ;;		wreg, status,2, status,0, pclath, cstack
  1293 ;; Tracked objects:
  1294 ;;		On entry : 0/0
  1295 ;;		On exit  : 0/0
  1296 ;;		Unchanged: 0/0
  1297 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1298 ;;      Params:         0       0       0       0       0
  1299 ;;      Locals:         0       3       0       0       0
  1300 ;;      Temps:          0       1       0       0       0
  1301 ;;      Totals:         0       4       0       0       0
  1302 ;;Total ram usage:        4 bytes
  1303 ;; Hardware stack levels used:    1
  1304 ;; Hardware stack levels required when called:    4
  1305 ;; This function calls:
  1306 ;;		_Lcd_Port
  1307 ;; This function is called by:
  1308 ;;		_Lcd_Write_String
  1309 ;;		_main
  1310 ;; This function uses a non-reentrant model
  1311 ;;
  1312                           
  1313                           
  1314                           ;psect for function _Lcd_Write_Char
  1315  056B                     _Lcd_Write_Char:	
  1316                           
  1317                           ;incstack = 0
  1318                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  1319                           ;Lcd_Write_Char@a stored from wreg
  1320  056B  1283               	bcf	3,5	;RP0=0, select bank0
  1321  056C  1303               	bcf	3,6	;RP1=0, select bank0
  1322  056D  00C8               	movwf	Lcd_Write_Char@a
  1323                           
  1324                           ;lcd.h: 83: char temp,y;
  1325                           ;lcd.h: 84: temp = a&0x0F;
  1326  056E  0848               	movf	Lcd_Write_Char@a,w
  1327  056F  390F               	andlw	15
  1328  0570  00C5               	movwf	??_Lcd_Write_Char
  1329  0571  0845               	movf	??_Lcd_Write_Char,w
  1330  0572  00C6               	movwf	Lcd_Write_Char@temp
  1331                           
  1332                           ;lcd.h: 85: y = a&0xF0;
  1333  0573  0848               	movf	Lcd_Write_Char@a,w
  1334  0574  39F0               	andlw	240
  1335  0575  00C5               	movwf	??_Lcd_Write_Char
  1336  0576  0845               	movf	??_Lcd_Write_Char,w
  1337  0577  00C7               	movwf	Lcd_Write_Char@y
  1338                           
  1339                           ;lcd.h: 86: RD2 = 1;
  1340  0578  1508               	bsf	8,2	;volatile
  1341                           
  1342                           ;lcd.h: 87: Lcd_Port(y>>4);
  1343  0579  0847               	movf	Lcd_Write_Char@y,w
  1344  057A  00C5               	movwf	??_Lcd_Write_Char
  1345  057B  3004               	movlw	4
  1346  057C                     u1335:	
  1347  057C  1003               	clrc
  1348  057D  0CC5               	rrf	??_Lcd_Write_Char,f
  1349  057E  3EFF               	addlw	-1
  1350  057F  1D03               	skipz
  1351  0580  2D7C               	goto	u1335
  1352  0581  0845               	movf	??_Lcd_Write_Char,w
  1353  0582  120A  118A  2605  120A  118A  	fcall	_Lcd_Port
  1354                           
  1355                           ;lcd.h: 88: RD3 = 1;
  1356  0587  1283               	bcf	3,5	;RP0=0, select bank0
  1357  0588  1303               	bcf	3,6	;RP1=0, select bank0
  1358  0589  1588               	bsf	8,3	;volatile
  1359                           
  1360                           ;lcd.h: 89: _delay((unsigned long)((40)*(8000000/4000000.0)));
  1361  058A  301A               	movlw	26
  1362  058B  00C5               	movwf	??_Lcd_Write_Char
  1363  058C                     u1547:	
  1364  058C  0BC5               	decfsz	??_Lcd_Write_Char,f
  1365  058D  2D8C               	goto	u1547
  1366  058E  0000               	nop
  1367                           
  1368                           ;lcd.h: 90: RD3 = 0;
  1369  058F  1283               	bcf	3,5	;RP0=0, select bank0
  1370  0590  1303               	bcf	3,6	;RP1=0, select bank0
  1371  0591  1188               	bcf	8,3	;volatile
  1372                           
  1373                           ;lcd.h: 91: Lcd_Port(temp);
  1374  0592  0846               	movf	Lcd_Write_Char@temp,w
  1375  0593  120A  118A  2605  120A  118A  	fcall	_Lcd_Port
  1376                           
  1377                           ;lcd.h: 92: RD3 = 1;
  1378  0598  1283               	bcf	3,5	;RP0=0, select bank0
  1379  0599  1303               	bcf	3,6	;RP1=0, select bank0
  1380  059A  1588               	bsf	8,3	;volatile
  1381                           
  1382                           ;lcd.h: 93: _delay((unsigned long)((40)*(8000000/4000000.0)));
  1383  059B  301A               	movlw	26
  1384  059C  00C5               	movwf	??_Lcd_Write_Char
  1385  059D                     u1557:	
  1386  059D  0BC5               	decfsz	??_Lcd_Write_Char,f
  1387  059E  2D9D               	goto	u1557
  1388  059F  0000               	nop
  1389                           
  1390                           ;lcd.h: 94: RD3 = 0;
  1391  05A0  1283               	bcf	3,5	;RP0=0, select bank0
  1392  05A1  1303               	bcf	3,6	;RP1=0, select bank0
  1393  05A2  1188               	bcf	8,3	;volatile
  1394  05A3  0008               	return
  1395  05A4                     __end_of_Lcd_Write_Char:	
  1396                           
  1397                           	psect	text5
  1398  0487                     __ptext5:	
  1399 ;; *************** function _Lcd_Set_Cursor *****************
  1400 ;; Defined at:
  1401 ;;		line 41 in file "lcd.h"
  1402 ;; Parameters:    Size  Location     Type
  1403 ;;  a               1    wreg     unsigned char 
  1404 ;;  b               1   40[BANK0 ] unsigned char 
  1405 ;; Auto vars:     Size  Location     Type
  1406 ;;  a               1    2[BANK1 ] unsigned char 
  1407 ;;  temp            1    5[BANK1 ] unsigned char 
  1408 ;;  y               1    4[BANK1 ] unsigned char 
  1409 ;;  z               1    3[BANK1 ] unsigned char 
  1410 ;; Return value:  Size  Location     Type
  1411 ;;		None               void
  1412 ;; Registers used:
  1413 ;;		wreg, status,2, status,0, pclath, cstack
  1414 ;; Tracked objects:
  1415 ;;		On entry : 0/0
  1416 ;;		On exit  : 0/0
  1417 ;;		Unchanged: 0/0
  1418 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1419 ;;      Params:         0       1       0       0       0
  1420 ;;      Locals:         0       0       4       0       0
  1421 ;;      Temps:          0       0       2       0       0
  1422 ;;      Totals:         0       1       6       0       0
  1423 ;;Total ram usage:        7 bytes
  1424 ;; Hardware stack levels used:    1
  1425 ;; Hardware stack levels required when called:    5
  1426 ;; This function calls:
  1427 ;;		_Lcd_Cmd
  1428 ;; This function is called by:
  1429 ;;		_main
  1430 ;; This function uses a non-reentrant model
  1431 ;;
  1432                           
  1433                           
  1434                           ;psect for function _Lcd_Set_Cursor
  1435  0487                     _Lcd_Set_Cursor:	
  1436                           
  1437                           ;incstack = 0
  1438                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  1439                           ;Lcd_Set_Cursor@a stored from wreg
  1440  0487  1683               	bsf	3,5	;RP0=1, select bank1
  1441  0488  1303               	bcf	3,6	;RP1=0, select bank1
  1442  0489  00A2               	movwf	Lcd_Set_Cursor@a^(0+128)
  1443                           
  1444                           ;lcd.h: 43: char temp,z,y;
  1445                           ;lcd.h: 44: if(a == 1)
  1446  048A  0822               	movf	Lcd_Set_Cursor@a^(0+128),w
  1447  048B  3A01               	xorlw	1
  1448  048C  1D03               	skipz
  1449  048D  2CB5               	goto	l1362
  1450                           
  1451                           ;lcd.h: 45: {
  1452                           ;lcd.h: 46: temp = 0x80 + b - 1;
  1453  048E  1283               	bcf	3,5	;RP0=0, select bank0
  1454  048F  1303               	bcf	3,6	;RP1=0, select bank0
  1455  0490  0848               	movf	Lcd_Set_Cursor@b,w
  1456  0491  3E7F               	addlw	127
  1457  0492  1683               	bsf	3,5	;RP0=1, select bank1
  1458  0493  1303               	bcf	3,6	;RP1=0, select bank1
  1459  0494  00A0               	movwf	??_Lcd_Set_Cursor^(0+128)
  1460  0495  0820               	movf	??_Lcd_Set_Cursor^(0+128),w
  1461  0496  00A5               	movwf	Lcd_Set_Cursor@temp^(0+128)
  1462                           
  1463                           ;lcd.h: 47: z = temp>>4;
  1464  0497  0825               	movf	Lcd_Set_Cursor@temp^(0+128),w
  1465  0498  00A0               	movwf	??_Lcd_Set_Cursor^(0+128)
  1466  0499  3004               	movlw	4
  1467  049A                     u1355:	
  1468  049A  1003               	clrc
  1469  049B  0CA0               	rrf	??_Lcd_Set_Cursor^(0+128),f
  1470  049C  3EFF               	addlw	-1
  1471  049D  1D03               	skipz
  1472  049E  2C9A               	goto	u1355
  1473  049F  0820               	movf	??_Lcd_Set_Cursor^(0+128),w
  1474  04A0  00A1               	movwf	(??_Lcd_Set_Cursor+1)^(0+128)
  1475  04A1  0821               	movf	(??_Lcd_Set_Cursor+1)^(0+128),w
  1476  04A2  00A3               	movwf	Lcd_Set_Cursor@z^(0+128)
  1477                           
  1478                           ;lcd.h: 48: y = temp & 0x0F;
  1479  04A3  0825               	movf	Lcd_Set_Cursor@temp^(0+128),w
  1480  04A4  390F               	andlw	15
  1481  04A5  00A0               	movwf	??_Lcd_Set_Cursor^(0+128)
  1482  04A6  0820               	movf	??_Lcd_Set_Cursor^(0+128),w
  1483  04A7  00A4               	movwf	Lcd_Set_Cursor@y^(0+128)
  1484                           
  1485                           ;lcd.h: 49: Lcd_Cmd(z);
  1486  04A8  0823               	movf	Lcd_Set_Cursor@z^(0+128),w
  1487  04A9  120A  118A  25EB  120A  118A  	fcall	_Lcd_Cmd
  1488                           
  1489                           ;lcd.h: 50: Lcd_Cmd(y);
  1490  04AE  1683               	bsf	3,5	;RP0=1, select bank1
  1491  04AF  1303               	bcf	3,6	;RP1=0, select bank1
  1492  04B0  0824               	movf	Lcd_Set_Cursor@y^(0+128),w
  1493  04B1  120A  118A  25EB   	fcall	_Lcd_Cmd
  1494                           
  1495                           ;lcd.h: 51: }
  1496  04B4  0008               	return
  1497  04B5                     l1362:	
  1498                           
  1499                           ;lcd.h: 52: else if(a == 2)
  1500  04B5  1683               	bsf	3,5	;RP0=1, select bank1
  1501  04B6  1303               	bcf	3,6	;RP1=0, select bank1
  1502  04B7  0822               	movf	Lcd_Set_Cursor@a^(0+128),w
  1503  04B8  3A02               	xorlw	2
  1504  04B9  1D03               	skipz
  1505  04BA  0008               	return
  1506                           
  1507                           ;lcd.h: 53: {
  1508                           ;lcd.h: 54: temp = 0xC0 + b - 1;
  1509  04BB  1283               	bcf	3,5	;RP0=0, select bank0
  1510  04BC  1303               	bcf	3,6	;RP1=0, select bank0
  1511  04BD  0848               	movf	Lcd_Set_Cursor@b,w
  1512  04BE  3EBF               	addlw	191
  1513  04BF  1683               	bsf	3,5	;RP0=1, select bank1
  1514  04C0  1303               	bcf	3,6	;RP1=0, select bank1
  1515  04C1  00A0               	movwf	??_Lcd_Set_Cursor^(0+128)
  1516  04C2  0820               	movf	??_Lcd_Set_Cursor^(0+128),w
  1517  04C3  00A5               	movwf	Lcd_Set_Cursor@temp^(0+128)
  1518                           
  1519                           ;lcd.h: 55: z = temp>>4;
  1520  04C4  0825               	movf	Lcd_Set_Cursor@temp^(0+128),w
  1521  04C5  00A0               	movwf	??_Lcd_Set_Cursor^(0+128)
  1522  04C6  3004               	movlw	4
  1523  04C7                     u1375:	
  1524  04C7  1003               	clrc
  1525  04C8  0CA0               	rrf	??_Lcd_Set_Cursor^(0+128),f
  1526  04C9  3EFF               	addlw	-1
  1527  04CA  1D03               	skipz
  1528  04CB  2CC7               	goto	u1375
  1529  04CC  0820               	movf	??_Lcd_Set_Cursor^(0+128),w
  1530  04CD  00A1               	movwf	(??_Lcd_Set_Cursor+1)^(0+128)
  1531  04CE  0821               	movf	(??_Lcd_Set_Cursor+1)^(0+128),w
  1532  04CF  00A3               	movwf	Lcd_Set_Cursor@z^(0+128)
  1533                           
  1534                           ;lcd.h: 56: y = temp & 0x0F;
  1535  04D0  0825               	movf	Lcd_Set_Cursor@temp^(0+128),w
  1536  04D1  390F               	andlw	15
  1537  04D2  00A0               	movwf	??_Lcd_Set_Cursor^(0+128)
  1538  04D3  0820               	movf	??_Lcd_Set_Cursor^(0+128),w
  1539  04D4  00A4               	movwf	Lcd_Set_Cursor@y^(0+128)
  1540                           
  1541                           ;lcd.h: 57: Lcd_Cmd(z);
  1542  04D5  0823               	movf	Lcd_Set_Cursor@z^(0+128),w
  1543  04D6  120A  118A  25EB  120A  118A  	fcall	_Lcd_Cmd
  1544                           
  1545                           ;lcd.h: 58: Lcd_Cmd(y);
  1546  04DB  1683               	bsf	3,5	;RP0=1, select bank1
  1547  04DC  1303               	bcf	3,6	;RP1=0, select bank1
  1548  04DD  0824               	movf	Lcd_Set_Cursor@y^(0+128),w
  1549  04DE  120A  118A  25EB   	fcall	_Lcd_Cmd
  1550  04E1  0008               	return
  1551  04E2                     __end_of_Lcd_Set_Cursor:	
  1552                           
  1553                           	psect	text6
  1554  0426                     __ptext6:	
  1555 ;; *************** function _Lcd_Init *****************
  1556 ;; Defined at:
  1557 ;;		line 62 in file "lcd.h"
  1558 ;; Parameters:    Size  Location     Type
  1559 ;;		None
  1560 ;; Auto vars:     Size  Location     Type
  1561 ;;		None
  1562 ;; Return value:  Size  Location     Type
  1563 ;;		None               void
  1564 ;; Registers used:
  1565 ;;		wreg, status,2, status,0, pclath, cstack
  1566 ;; Tracked objects:
  1567 ;;		On entry : 0/0
  1568 ;;		On exit  : 0/0
  1569 ;;		Unchanged: 0/0
  1570 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1571 ;;      Params:         0       0       0       0       0
  1572 ;;      Locals:         0       0       0       0       0
  1573 ;;      Temps:          0       2       0       0       0
  1574 ;;      Totals:         0       2       0       0       0
  1575 ;;Total ram usage:        2 bytes
  1576 ;; Hardware stack levels used:    1
  1577 ;; Hardware stack levels required when called:    5
  1578 ;; This function calls:
  1579 ;;		_Lcd_Cmd
  1580 ;;		_Lcd_Port
  1581 ;; This function is called by:
  1582 ;;		_main
  1583 ;; This function uses a non-reentrant model
  1584 ;;
  1585                           
  1586                           
  1587                           ;psect for function _Lcd_Init
  1588  0426                     _Lcd_Init:	
  1589                           
  1590                           ;lcd.h: 64: Lcd_Port(0x00);
  1591                           
  1592                           ;incstack = 0
  1593                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  1594  0426  3000               	movlw	0
  1595  0427  120A  118A  2605  120A  118A  	fcall	_Lcd_Port
  1596                           
  1597                           ;lcd.h: 65: _delay((unsigned long)((20)*(8000000/4000.0)));
  1598  042C  3034               	movlw	52
  1599  042D  1283               	bcf	3,5	;RP0=0, select bank0
  1600  042E  1303               	bcf	3,6	;RP1=0, select bank0
  1601  042F  00C9               	movwf	??_Lcd_Init+1
  1602  0430  30F1               	movlw	241
  1603  0431  00C8               	movwf	??_Lcd_Init
  1604  0432                     u1567:	
  1605  0432  0BC8               	decfsz	??_Lcd_Init,f
  1606  0433  2C32               	goto	u1567
  1607  0434  0BC9               	decfsz	??_Lcd_Init+1,f
  1608  0435  2C32               	goto	u1567
  1609  0436  2C37               	nop2
  1610                           
  1611                           ;lcd.h: 66: Lcd_Cmd(0x03);
  1612  0437  3003               	movlw	3
  1613  0438  120A  118A  25EB  120A  118A  	fcall	_Lcd_Cmd
  1614                           
  1615                           ;lcd.h: 67: _delay((unsigned long)((5)*(8000000/4000.0)));
  1616  043D  300D               	movlw	13
  1617  043E  1283               	bcf	3,5	;RP0=0, select bank0
  1618  043F  1303               	bcf	3,6	;RP1=0, select bank0
  1619  0440  00C9               	movwf	??_Lcd_Init+1
  1620  0441  30FB               	movlw	251
  1621  0442  00C8               	movwf	??_Lcd_Init
  1622  0443                     u1577:	
  1623  0443  0BC8               	decfsz	??_Lcd_Init,f
  1624  0444  2C43               	goto	u1577
  1625  0445  0BC9               	decfsz	??_Lcd_Init+1,f
  1626  0446  2C43               	goto	u1577
  1627  0447  2C48               	nop2
  1628                           
  1629                           ;lcd.h: 68: Lcd_Cmd(0x03);
  1630  0448  3003               	movlw	3
  1631  0449  120A  118A  25EB  120A  118A  	fcall	_Lcd_Cmd
  1632                           
  1633                           ;lcd.h: 69: _delay((unsigned long)((11)*(8000000/4000.0)));
  1634  044E  301D               	movlw	29
  1635  044F  1283               	bcf	3,5	;RP0=0, select bank0
  1636  0450  1303               	bcf	3,6	;RP1=0, select bank0
  1637  0451  00C9               	movwf	??_Lcd_Init+1
  1638  0452  3091               	movlw	145
  1639  0453  00C8               	movwf	??_Lcd_Init
  1640  0454                     u1587:	
  1641  0454  0BC8               	decfsz	??_Lcd_Init,f
  1642  0455  2C54               	goto	u1587
  1643  0456  0BC9               	decfsz	??_Lcd_Init+1,f
  1644  0457  2C54               	goto	u1587
  1645                           
  1646                           ;lcd.h: 70: Lcd_Cmd(0x03);
  1647  0458  3003               	movlw	3
  1648  0459  120A  118A  25EB  120A  118A  	fcall	_Lcd_Cmd
  1649                           
  1650                           ;lcd.h: 72: Lcd_Cmd(0x02);
  1651  045E  3002               	movlw	2
  1652  045F  120A  118A  25EB  120A  118A  	fcall	_Lcd_Cmd
  1653                           
  1654                           ;lcd.h: 73: Lcd_Cmd(0x02);
  1655  0464  3002               	movlw	2
  1656  0465  120A  118A  25EB  120A  118A  	fcall	_Lcd_Cmd
  1657                           
  1658                           ;lcd.h: 74: Lcd_Cmd(0x08);
  1659  046A  3008               	movlw	8
  1660  046B  120A  118A  25EB  120A  118A  	fcall	_Lcd_Cmd
  1661                           
  1662                           ;lcd.h: 75: Lcd_Cmd(0x00);
  1663  0470  3000               	movlw	0
  1664  0471  120A  118A  25EB  120A  118A  	fcall	_Lcd_Cmd
  1665                           
  1666                           ;lcd.h: 76: Lcd_Cmd(0x0C);
  1667  0476  300C               	movlw	12
  1668  0477  120A  118A  25EB  120A  118A  	fcall	_Lcd_Cmd
  1669                           
  1670                           ;lcd.h: 77: Lcd_Cmd(0x00);
  1671  047C  3000               	movlw	0
  1672  047D  120A  118A  25EB  120A  118A  	fcall	_Lcd_Cmd
  1673                           
  1674                           ;lcd.h: 78: Lcd_Cmd(0x06);
  1675  0482  3006               	movlw	6
  1676  0483  120A  118A  25EB   	fcall	_Lcd_Cmd
  1677  0486  0008               	return
  1678  0487                     __end_of_Lcd_Init:	
  1679                           
  1680                           	psect	text7
  1681  061D                     __ptext7:	
  1682 ;; *************** function _Lcd_Clear *****************
  1683 ;; Defined at:
  1684 ;;		line 35 in file "lcd.h"
  1685 ;; Parameters:    Size  Location     Type
  1686 ;;		None
  1687 ;; Auto vars:     Size  Location     Type
  1688 ;;		None
  1689 ;; Return value:  Size  Location     Type
  1690 ;;                  2   52[COMMON] int 
  1691 ;; Registers used:
  1692 ;;		wreg, status,2, status,0, pclath, cstack
  1693 ;; Tracked objects:
  1694 ;;		On entry : 0/0
  1695 ;;		On exit  : 0/0
  1696 ;;		Unchanged: 0/0
  1697 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1698 ;;      Params:         0       0       0       0       0
  1699 ;;      Locals:         0       0       0       0       0
  1700 ;;      Temps:          0       0       0       0       0
  1701 ;;      Totals:         0       0       0       0       0
  1702 ;;Total ram usage:        0 bytes
  1703 ;; Hardware stack levels used:    1
  1704 ;; Hardware stack levels required when called:    5
  1705 ;; This function calls:
  1706 ;;		_Lcd_Cmd
  1707 ;; This function is called by:
  1708 ;;		_main
  1709 ;; This function uses a non-reentrant model
  1710 ;;
  1711                           
  1712                           
  1713                           ;psect for function _Lcd_Clear
  1714  061D                     _Lcd_Clear:	
  1715                           
  1716                           ;lcd.h: 37: Lcd_Cmd(0);
  1717                           
  1718                           ;incstack = 0
  1719                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  1720  061D  3000               	movlw	0
  1721  061E  120A  118A  25EB  120A  118A  	fcall	_Lcd_Cmd
  1722                           
  1723                           ;lcd.h: 38: Lcd_Cmd(1);
  1724  0623  3001               	movlw	1
  1725  0624  120A  118A  25EB   	fcall	_Lcd_Cmd
  1726  0627  0008               	return
  1727  0628                     __end_of_Lcd_Clear:	
  1728                           
  1729                           	psect	text8
  1730  05EB                     __ptext8:	
  1731 ;; *************** function _Lcd_Cmd *****************
  1732 ;; Defined at:
  1733 ;;		line 26 in file "lcd.h"
  1734 ;; Parameters:    Size  Location     Type
  1735 ;;  a               1    wreg     unsigned char 
  1736 ;; Auto vars:     Size  Location     Type
  1737 ;;  a               1   39[BANK0 ] unsigned char 
  1738 ;; Return value:  Size  Location     Type
  1739 ;;		None               void
  1740 ;; Registers used:
  1741 ;;		wreg, status,2, status,0, pclath, cstack
  1742 ;; Tracked objects:
  1743 ;;		On entry : 0/0
  1744 ;;		On exit  : 0/0
  1745 ;;		Unchanged: 0/0
  1746 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1747 ;;      Params:         0       0       0       0       0
  1748 ;;      Locals:         0       1       0       0       0
  1749 ;;      Temps:          0       2       0       0       0
  1750 ;;      Totals:         0       3       0       0       0
  1751 ;;Total ram usage:        3 bytes
  1752 ;; Hardware stack levels used:    1
  1753 ;; Hardware stack levels required when called:    4
  1754 ;; This function calls:
  1755 ;;		_Lcd_Port
  1756 ;; This function is called by:
  1757 ;;		_Lcd_Clear
  1758 ;;		_Lcd_Set_Cursor
  1759 ;;		_Lcd_Init
  1760 ;;		_Lcd_Shift_Right
  1761 ;;		_Lcd_Shift_Left
  1762 ;; This function uses a non-reentrant model
  1763 ;;
  1764                           
  1765                           
  1766                           ;psect for function _Lcd_Cmd
  1767  05EB                     _Lcd_Cmd:	
  1768                           
  1769                           ;incstack = 0
  1770                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  1771                           ;Lcd_Cmd@a stored from wreg
  1772  05EB  1283               	bcf	3,5	;RP0=0, select bank0
  1773  05EC  1303               	bcf	3,6	;RP1=0, select bank0
  1774  05ED  00C7               	movwf	Lcd_Cmd@a
  1775                           
  1776                           ;lcd.h: 28: RD2 = 0;
  1777  05EE  1108               	bcf	8,2	;volatile
  1778                           
  1779                           ;lcd.h: 29: Lcd_Port(a);
  1780  05EF  0847               	movf	Lcd_Cmd@a,w
  1781  05F0  120A  118A  2605  120A  118A  	fcall	_Lcd_Port
  1782                           
  1783                           ;lcd.h: 30: RD3 = 1;
  1784  05F5  1283               	bcf	3,5	;RP0=0, select bank0
  1785  05F6  1303               	bcf	3,6	;RP1=0, select bank0
  1786  05F7  1588               	bsf	8,3	;volatile
  1787                           
  1788                           ;lcd.h: 31: _delay((unsigned long)((4)*(8000000/4000.0)));
  1789  05F8  300B               	movlw	11
  1790  05F9  00C6               	movwf	??_Lcd_Cmd+1
  1791  05FA  3062               	movlw	98
  1792  05FB  00C5               	movwf	??_Lcd_Cmd
  1793  05FC                     u1597:	
  1794  05FC  0BC5               	decfsz	??_Lcd_Cmd,f
  1795  05FD  2DFC               	goto	u1597
  1796  05FE  0BC6               	decfsz	??_Lcd_Cmd+1,f
  1797  05FF  2DFC               	goto	u1597
  1798  0600  0000               	nop
  1799                           
  1800                           ;lcd.h: 32: RD3 = 0;
  1801  0601  1283               	bcf	3,5	;RP0=0, select bank0
  1802  0602  1303               	bcf	3,6	;RP1=0, select bank0
  1803  0603  1188               	bcf	8,3	;volatile
  1804  0604  0008               	return
  1805  0605                     __end_of_Lcd_Cmd:	
  1806                           
  1807                           	psect	text9
  1808  0605                     __ptext9:	
  1809 ;; *************** function _Lcd_Port *****************
  1810 ;; Defined at:
  1811 ;;		line 4 in file "lcd.h"
  1812 ;; Parameters:    Size  Location     Type
  1813 ;;  a               1    wreg     unsigned char 
  1814 ;; Auto vars:     Size  Location     Type
  1815 ;;  a               1   36[BANK0 ] unsigned char 
  1816 ;; Return value:  Size  Location     Type
  1817 ;;		None               void
  1818 ;; Registers used:
  1819 ;;		wreg
  1820 ;; Tracked objects:
  1821 ;;		On entry : 0/0
  1822 ;;		On exit  : 0/0
  1823 ;;		Unchanged: 0/0
  1824 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1825 ;;      Params:         0       0       0       0       0
  1826 ;;      Locals:         0       1       0       0       0
  1827 ;;      Temps:          0       0       0       0       0
  1828 ;;      Totals:         0       1       0       0       0
  1829 ;;Total ram usage:        1 bytes
  1830 ;; Hardware stack levels used:    1
  1831 ;; Hardware stack levels required when called:    3
  1832 ;; This function calls:
  1833 ;;		Nothing
  1834 ;; This function is called by:
  1835 ;;		_Lcd_Cmd
  1836 ;;		_Lcd_Init
  1837 ;;		_Lcd_Write_Char
  1838 ;; This function uses a non-reentrant model
  1839 ;;
  1840                           
  1841                           
  1842                           ;psect for function _Lcd_Port
  1843  0605                     _Lcd_Port:	
  1844                           
  1845                           ;incstack = 0
  1846                           ; Regs used in _Lcd_Port: [wreg]
  1847                           ;Lcd_Port@a stored from wreg
  1848  0605  1283               	bcf	3,5	;RP0=0, select bank0
  1849  0606  1303               	bcf	3,6	;RP1=0, select bank0
  1850  0607  00C4               	movwf	Lcd_Port@a
  1851                           
  1852                           ;lcd.h: 6: if(a & 1)
  1853  0608  1C44               	btfss	Lcd_Port@a,0
  1854  0609  2E0C               	goto	l39
  1855                           
  1856                           ;lcd.h: 7: RD4 = 1;
  1857  060A  1608               	bsf	8,4	;volatile
  1858  060B  2E0D               	goto	l40
  1859  060C                     l39:	
  1860                           
  1861                           ;lcd.h: 8: else
  1862                           ;lcd.h: 9: RD4 = 0;
  1863  060C  1208               	bcf	8,4	;volatile
  1864  060D                     l40:	
  1865                           
  1866                           ;lcd.h: 11: if(a & 2)
  1867  060D  1CC4               	btfss	Lcd_Port@a,1
  1868  060E  2E11               	goto	l41
  1869                           
  1870                           ;lcd.h: 12: RD5 = 1;
  1871  060F  1688               	bsf	8,5	;volatile
  1872  0610  2E12               	goto	l42
  1873  0611                     l41:	
  1874                           
  1875                           ;lcd.h: 13: else
  1876                           ;lcd.h: 14: RD5 = 0;
  1877  0611  1288               	bcf	8,5	;volatile
  1878  0612                     l42:	
  1879                           
  1880                           ;lcd.h: 16: if(a & 4)
  1881  0612  1D44               	btfss	Lcd_Port@a,2
  1882  0613  2E16               	goto	l43
  1883                           
  1884                           ;lcd.h: 17: RD6 = 1;
  1885  0614  1708               	bsf	8,6	;volatile
  1886  0615  2E17               	goto	l44
  1887  0616                     l43:	
  1888                           
  1889                           ;lcd.h: 18: else
  1890                           ;lcd.h: 19: RD6 = 0;
  1891  0616  1308               	bcf	8,6	;volatile
  1892  0617                     l44:	
  1893                           
  1894                           ;lcd.h: 21: if(a & 8)
  1895  0617  1DC4               	btfss	Lcd_Port@a,3
  1896  0618  2E1B               	goto	l45
  1897                           
  1898                           ;lcd.h: 22: RD7 = 1;
  1899  0619  1788               	bsf	8,7	;volatile
  1900  061A  0008               	return
  1901  061B                     l45:	
  1902                           
  1903                           ;lcd.h: 23: else
  1904                           ;lcd.h: 24: RD7 = 0;
  1905  061B  1388               	bcf	8,7	;volatile
  1906  061C  0008               	return
  1907  061D                     __end_of_Lcd_Port:	
  1908                           
  1909                           	psect	text10
  1910  04E2                     __ptext10:	
  1911 ;; *************** function _echo *****************
  1912 ;; Defined at:
  1913 ;;		line 27 in file "main.c"
  1914 ;; Parameters:    Size  Location     Type
  1915 ;;		None
  1916 ;; Auto vars:     Size  Location     Type
  1917 ;;		None
  1918 ;; Return value:  Size  Location     Type
  1919 ;;		None               void
  1920 ;; Registers used:
  1921 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1922 ;; Tracked objects:
  1923 ;;		On entry : 0/0
  1924 ;;		On exit  : 0/0
  1925 ;;		Unchanged: 0/0
  1926 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1927 ;;      Params:         0       0       0       0       0
  1928 ;;      Locals:         0       0       0       0       0
  1929 ;;      Temps:          0       6       0       0       0
  1930 ;;      Totals:         0       6       0       0       0
  1931 ;;Total ram usage:        6 bytes
  1932 ;; Hardware stack levels used:    1
  1933 ;; Hardware stack levels required when called:    2
  1934 ;; This function calls:
  1935 ;;		___awtoft
  1936 ;;		___ftdiv
  1937 ;;		___fttol
  1938 ;; This function is called by:
  1939 ;;		Interrupt level 1
  1940 ;; This function uses a non-reentrant model
  1941 ;;
  1942                           
  1943                           
  1944                           ;psect for function _echo
  1945  04E2                     _echo:	
  1946                           
  1947                           ;main.c: 29: if(RBIF == 1)
  1948  04E2  1C0B               	btfss	11,0	;volatile
  1949  04E3  2D24               	goto	L2
  1950                           
  1951                           ;main.c: 30: {
  1952                           ;main.c: 31: RBIE = 0;
  1953  04E4  118B               	bcf	11,3	;volatile
  1954                           
  1955                           ;main.c: 32: if(RB4 == 1)
  1956  04E5  1E06               	btfss	6,4	;volatile
  1957  04E6  2CE8               	goto	i1l83
  1958                           
  1959                           ;main.c: 33: TMR1ON = 1;
  1960  04E7  1410               	bsf	16,0	;volatile
  1961  04E8                     i1l83:	
  1962                           
  1963                           ;main.c: 34: if(RB4 == 0)
  1964  04E8  1A06               	btfsc	6,4	;volatile
  1965  04E9  2D23               	goto	i1l1234
  1966                           
  1967                           ;main.c: 35: {
  1968                           ;main.c: 36: TMR1ON = 0;
  1969  04EA  1010               	bcf	16,0	;volatile
  1970                           
  1971                           ;main.c: 37: a = (TMR1L | (TMR1H<<8))/58.82;
  1972  04EB  080F               	movf	15,w	;volatile
  1973  04EC  00BE               	movwf	??_echo
  1974  04ED  01BF               	clrf	??_echo+1
  1975  04EE  083E               	movf	??_echo,w
  1976  04EF  00BF               	movwf	??_echo+1
  1977  04F0  01BE               	clrf	??_echo
  1978  04F1  083E               	movf	??_echo,w
  1979  04F2  040E               	iorwf	14,w	;volatile
  1980  04F3  00F8               	movwf	___awtoft@c
  1981  04F4  083F               	movf	??_echo+1,w
  1982  04F5  00F9               	movwf	___awtoft@c+1
  1983  04F6  120A  118A  25CA  120A  118A  	fcall	___awtoft
  1984  04FB  0878               	movf	?___awtoft,w
  1985  04FC  1283               	bcf	3,5	;RP0=0, select bank0
  1986  04FD  1303               	bcf	3,6	;RP1=0, select bank0
  1987  04FE  00A3               	movwf	___ftdiv@f1
  1988  04FF  0879               	movf	?___awtoft+1,w
  1989  0500  00A4               	movwf	___ftdiv@f1+1
  1990  0501  087A               	movf	?___awtoft+2,w
  1991  0502  00A5               	movwf	___ftdiv@f1+2
  1992  0503  3048               	movlw	72
  1993  0504  00A0               	movwf	___ftdiv@f2
  1994  0505  306B               	movlw	107
  1995  0506  00A1               	movwf	___ftdiv@f2+1
  1996  0507  3042               	movlw	66
  1997  0508  00A2               	movwf	___ftdiv@f2+2
  1998  0509  120A  118A  2193  120A  118A  	fcall	___ftdiv
  1999  050E  1283               	bcf	3,5	;RP0=0, select bank0
  2000  050F  1303               	bcf	3,6	;RP1=0, select bank0
  2001  0510  0820               	movf	?___ftdiv,w
  2002  0511  00B0               	movwf	___fttol@f1
  2003  0512  0821               	movf	?___ftdiv+1,w
  2004  0513  00B1               	movwf	___fttol@f1+1
  2005  0514  0822               	movf	?___ftdiv+2,w
  2006  0515  00B2               	movwf	___fttol@f1+2
  2007  0516  120A  118A  224B  120A  118A  	fcall	___fttol
  2008  051B  1283               	bcf	3,5	;RP0=0, select bank0
  2009  051C  1303               	bcf	3,6	;RP1=0, select bank0
  2010  051D  0831               	movf	?___fttol+1,w
  2011  051E  01CB               	clrf	_a+1
  2012  051F  07CB               	addwf	_a+1,f
  2013  0520  0830               	movf	?___fttol,w
  2014  0521  01CA               	clrf	_a
  2015  0522  07CA               	addwf	_a,f
  2016  0523                     i1l1234:	
  2017                           
  2018                           ;main.c: 38: }
  2019                           ;main.c: 39: }
  2020                           ;main.c: 40: RBIF = 0;
  2021  0523  100B               	bcf	11,0	;volatile
  2022  0524                     L2:	
  2023                           
  2024                           ;main.c: 41: RBIE = 1;
  2025  0524  158B               	bsf	11,3	;volatile
  2026  0525  0843               	movf	??_echo+5,w
  2027  0526  00FF               	movwf	127
  2028  0527  0842               	movf	??_echo+4,w
  2029  0528  008A               	movwf	10
  2030  0529  0841               	movf	??_echo+3,w
  2031  052A  0084               	movwf	4
  2032  052B  0E40               	swapf	(??_echo+2)^0,w
  2033  052C  0083               	movwf	3
  2034  052D  0EFE               	swapf	126,f
  2035  052E  0E7E               	swapf	126,w
  2036  052F  0009               	retfie
  2037  0530                     __end_of_echo:	
  2038                           
  2039                           	psect	intentry
  2040  0004                     __pintentry:	
  2041                           ;incstack = 0
  2042                           ; Regs used in _echo: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2043                           
  2044  0004                     interrupt_function:	
  2045  007E                     saved_w	set	btemp
  2046  0004  00FE               	movwf	btemp
  2047  0005  0E03               	swapf	3,w
  2048  0006  1283               	bcf	3,5	;RP0=0, select bank0
  2049  0007  1303               	bcf	3,6	;RP1=0, select bank0
  2050  0008  00C0               	movwf	??_echo+2
  2051  0009  0804               	movf	4,w
  2052  000A  00C1               	movwf	??_echo+3
  2053  000B  080A               	movf	10,w
  2054  000C  00C2               	movwf	??_echo+4
  2055  000D  087F               	movf	btemp+1,w
  2056  000E  00C3               	movwf	??_echo+5
  2057  000F  120A  118A  2CE2   	ljmp	_echo
  2058                           
  2059                           	psect	text11
  2060  024B                     __ptext11:	
  2061 ;; *************** function ___fttol *****************
  2062 ;; Defined at:
  2063 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\fttol.c"
  2064 ;; Parameters:    Size  Location     Type
  2065 ;;  f1              3   16[BANK0 ] float 
  2066 ;; Auto vars:     Size  Location     Type
  2067 ;;  lval            4   25[BANK0 ] unsigned long 
  2068 ;;  exp1            1   29[BANK0 ] unsigned char 
  2069 ;;  sign1           1   24[BANK0 ] unsigned char 
  2070 ;; Return value:  Size  Location     Type
  2071 ;;                  4   16[BANK0 ] long 
  2072 ;; Registers used:
  2073 ;;		wreg, status,2, status,0
  2074 ;; Tracked objects:
  2075 ;;		On entry : 0/0
  2076 ;;		On exit  : 0/0
  2077 ;;		Unchanged: 0/0
  2078 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2079 ;;      Params:         0       4       0       0       0
  2080 ;;      Locals:         0       6       0       0       0
  2081 ;;      Temps:          0       4       0       0       0
  2082 ;;      Totals:         0      14       0       0       0
  2083 ;;Total ram usage:       14 bytes
  2084 ;; Hardware stack levels used:    1
  2085 ;; This function calls:
  2086 ;;		Nothing
  2087 ;; This function is called by:
  2088 ;;		_echo
  2089 ;; This function uses a non-reentrant model
  2090 ;;
  2091                           
  2092                           
  2093                           ;psect for function ___fttol
  2094  024B                     ___fttol:	
  2095                           
  2096                           ;incstack = 0
  2097                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  2098  024B  1283               	bcf	3,5	;RP0=0, select bank0
  2099  024C  1303               	bcf	3,6	;RP1=0, select bank0
  2100  024D  0830               	movf	___fttol@f1,w
  2101  024E  00B4               	movwf	??___fttol
  2102  024F  0831               	movf	___fttol@f1+1,w
  2103  0250  00B5               	movwf	??___fttol+1
  2104  0251  0832               	movf	___fttol@f1+2,w
  2105  0252  00B6               	movwf	??___fttol+2
  2106  0253  1003               	clrc
  2107  0254  0D35               	rlf	??___fttol+1,w
  2108  0255  0D36               	rlf	??___fttol+2,w
  2109  0256  00B7               	movwf	??___fttol+3
  2110  0257  0837               	movf	??___fttol+3,w
  2111  0258  00BD               	movwf	___fttol@exp1
  2112  0259  08BD               	movf	___fttol@exp1,f
  2113  025A  1D03               	skipz
  2114  025B  2A65               	goto	i1l1182
  2115  025C  3000               	movlw	0
  2116  025D  00B3               	movwf	?___fttol+3
  2117  025E  3000               	movlw	0
  2118  025F  00B2               	movwf	?___fttol+2
  2119  0260  3000               	movlw	0
  2120  0261  00B1               	movwf	?___fttol+1
  2121  0262  3000               	movlw	0
  2122  0263  00B0               	movwf	?___fttol
  2123  0264  0008               	return
  2124  0265                     i1l1182:	
  2125  0265  0830               	movf	___fttol@f1,w
  2126  0266  00B4               	movwf	??___fttol
  2127  0267  0831               	movf	___fttol@f1+1,w
  2128  0268  00B5               	movwf	??___fttol+1
  2129  0269  0832               	movf	___fttol@f1+2,w
  2130  026A  00B6               	movwf	??___fttol+2
  2131  026B  3017               	movlw	23
  2132  026C                     u115_25:	
  2133  026C  1003               	clrc
  2134  026D  0CB6               	rrf	??___fttol+2,f
  2135  026E  0CB5               	rrf	??___fttol+1,f
  2136  026F  0CB4               	rrf	??___fttol,f
  2137  0270  3EFF               	addlw	-1
  2138  0271  1D03               	skipz
  2139  0272  2A6C               	goto	u115_25
  2140  0273  0834               	movf	??___fttol,w
  2141  0274  00B7               	movwf	??___fttol+3
  2142  0275  0837               	movf	??___fttol+3,w
  2143  0276  00B8               	movwf	___fttol@sign1
  2144  0277  17B1               	bsf	___fttol@f1+1,7
  2145  0278  30FF               	movlw	255
  2146  0279  05B0               	andwf	___fttol@f1,f
  2147  027A  30FF               	movlw	255
  2148  027B  05B1               	andwf	___fttol@f1+1,f
  2149  027C  3000               	movlw	0
  2150  027D  05B2               	andwf	___fttol@f1+2,f
  2151  027E  0830               	movf	___fttol@f1,w
  2152  027F  00B9               	movwf	___fttol@lval
  2153  0280  0831               	movf	___fttol@f1+1,w
  2154  0281  00BA               	movwf	___fttol@lval+1
  2155  0282  0832               	movf	___fttol@f1+2,w
  2156  0283  00BB               	movwf	___fttol@lval+2
  2157  0284  01BC               	clrf	___fttol@lval+3
  2158  0285  308E               	movlw	142
  2159  0286  02BD               	subwf	___fttol@exp1,f
  2160  0287  1FBD               	btfss	___fttol@exp1,7
  2161  0288  2AA7               	goto	i1l1202
  2162  0289  083D               	movf	___fttol@exp1,w
  2163  028A  3A80               	xorlw	128
  2164  028B  3E8F               	addlw	143
  2165  028C  1803               	skipnc
  2166  028D  2A97               	goto	i1l1200
  2167  028E  3000               	movlw	0
  2168  028F  00B3               	movwf	?___fttol+3
  2169  0290  3000               	movlw	0
  2170  0291  00B2               	movwf	?___fttol+2
  2171  0292  3000               	movlw	0
  2172  0293  00B1               	movwf	?___fttol+1
  2173  0294  3000               	movlw	0
  2174  0295  00B0               	movwf	?___fttol
  2175  0296  0008               	return
  2176  0297                     i1l1200:	
  2177  0297  3001               	movlw	1
  2178  0298                     u118_25:	
  2179  0298  1003               	clrc
  2180  0299  0CBC               	rrf	___fttol@lval+3,f
  2181  029A  0CBB               	rrf	___fttol@lval+2,f
  2182  029B  0CBA               	rrf	___fttol@lval+1,f
  2183  029C  0CB9               	rrf	___fttol@lval,f
  2184  029D  3EFF               	addlw	-1
  2185  029E  1D03               	skipz
  2186  029F  2A98               	goto	u118_25
  2187  02A0  3001               	movlw	1
  2188  02A1  00B4               	movwf	??___fttol
  2189  02A2  0834               	movf	??___fttol,w
  2190  02A3  07BD               	addwf	___fttol@exp1,f
  2191  02A4  1903               	btfsc	3,2
  2192  02A5  2AC2               	goto	i1l1212
  2193  02A6  2A97               	goto	i1l1200
  2194  02A7                     i1l1202:	
  2195  02A7  3018               	movlw	24
  2196  02A8  023D               	subwf	___fttol@exp1,w
  2197  02A9  1C03               	skipc
  2198  02AA  2ABF               	goto	i1l1210
  2199  02AB  3000               	movlw	0
  2200  02AC  00B3               	movwf	?___fttol+3
  2201  02AD  3000               	movlw	0
  2202  02AE  00B2               	movwf	?___fttol+2
  2203  02AF  3000               	movlw	0
  2204  02B0  00B1               	movwf	?___fttol+1
  2205  02B1  3000               	movlw	0
  2206  02B2  00B0               	movwf	?___fttol
  2207  02B3  0008               	return
  2208  02B4                     i1l1208:	
  2209  02B4  3001               	movlw	1
  2210  02B5  00B4               	movwf	??___fttol
  2211  02B6                     u121_25:	
  2212  02B6  1003               	clrc
  2213  02B7  0DB9               	rlf	___fttol@lval,f
  2214  02B8  0DBA               	rlf	___fttol@lval+1,f
  2215  02B9  0DBB               	rlf	___fttol@lval+2,f
  2216  02BA  0DBC               	rlf	___fttol@lval+3,f
  2217  02BB  0BB4               	decfsz	??___fttol,f
  2218  02BC  2AB6               	goto	u121_25
  2219  02BD  3001               	movlw	1
  2220  02BE  02BD               	subwf	___fttol@exp1,f
  2221  02BF                     i1l1210:	
  2222  02BF  08BD               	movf	___fttol@exp1,f
  2223  02C0  1D03               	skipz
  2224  02C1  2AB4               	goto	i1l1208
  2225  02C2                     i1l1212:	
  2226  02C2  0838               	movf	___fttol@sign1,w
  2227  02C3  1903               	btfsc	3,2
  2228  02C4  2AD0               	goto	i1l1216
  2229  02C5  09B9               	comf	___fttol@lval,f
  2230  02C6  09BA               	comf	___fttol@lval+1,f
  2231  02C7  09BB               	comf	___fttol@lval+2,f
  2232  02C8  09BC               	comf	___fttol@lval+3,f
  2233  02C9  0AB9               	incf	___fttol@lval,f
  2234  02CA  1903               	skipnz
  2235  02CB  0ABA               	incf	___fttol@lval+1,f
  2236  02CC  1903               	skipnz
  2237  02CD  0ABB               	incf	___fttol@lval+2,f
  2238  02CE  1903               	skipnz
  2239  02CF  0ABC               	incf	___fttol@lval+3,f
  2240  02D0                     i1l1216:	
  2241  02D0  083C               	movf	___fttol@lval+3,w
  2242  02D1  00B3               	movwf	?___fttol+3
  2243  02D2  083B               	movf	___fttol@lval+2,w
  2244  02D3  00B2               	movwf	?___fttol+2
  2245  02D4  083A               	movf	___fttol@lval+1,w
  2246  02D5  00B1               	movwf	?___fttol+1
  2247  02D6  0839               	movf	___fttol@lval,w
  2248  02D7  00B0               	movwf	?___fttol
  2249  02D8  0008               	return
  2250  02D9                     __end_of___fttol:	
  2251                           
  2252                           	psect	text12
  2253  0193                     __ptext12:	
  2254 ;; *************** function ___ftdiv *****************
  2255 ;; Defined at:
  2256 ;;		line 49 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic\ftdiv.c"
  2257 ;; Parameters:    Size  Location     Type
  2258 ;;  f2              3    0[BANK0 ] float 
  2259 ;;  f1              3    3[BANK0 ] float 
  2260 ;; Auto vars:     Size  Location     Type
  2261 ;;  f3              3   11[BANK0 ] float 
  2262 ;;  sign            1   15[BANK0 ] unsigned char 
  2263 ;;  exp             1   14[BANK0 ] unsigned char 
  2264 ;;  cntr            1   10[BANK0 ] unsigned char 
  2265 ;; Return value:  Size  Location     Type
  2266 ;;                  3    0[BANK0 ] float 
  2267 ;; Registers used:
  2268 ;;		wreg, status,2, status,0, pclath, cstack
  2269 ;; Tracked objects:
  2270 ;;		On entry : 0/0
  2271 ;;		On exit  : 0/0
  2272 ;;		Unchanged: 0/0
  2273 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2274 ;;      Params:         0       6       0       0       0
  2275 ;;      Locals:         0       6       0       0       0
  2276 ;;      Temps:          0       4       0       0       0
  2277 ;;      Totals:         0      16       0       0       0
  2278 ;;Total ram usage:       16 bytes
  2279 ;; Hardware stack levels used:    1
  2280 ;; Hardware stack levels required when called:    1
  2281 ;; This function calls:
  2282 ;;		___ftpack
  2283 ;; This function is called by:
  2284 ;;		_echo
  2285 ;; This function uses a non-reentrant model
  2286 ;;
  2287                           
  2288                           
  2289                           ;psect for function ___ftdiv
  2290  0193                     ___ftdiv:	
  2291                           
  2292                           ;incstack = 0
  2293                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  2294  0193  1283               	bcf	3,5	;RP0=0, select bank0
  2295  0194  1303               	bcf	3,6	;RP1=0, select bank0
  2296  0195  0823               	movf	___ftdiv@f1,w
  2297  0196  00A6               	movwf	??___ftdiv
  2298  0197  0824               	movf	___ftdiv@f1+1,w
  2299  0198  00A7               	movwf	??___ftdiv+1
  2300  0199  0825               	movf	___ftdiv@f1+2,w
  2301  019A  00A8               	movwf	??___ftdiv+2
  2302  019B  1003               	clrc
  2303  019C  0D27               	rlf	??___ftdiv+1,w
  2304  019D  0D28               	rlf	??___ftdiv+2,w
  2305  019E  00A9               	movwf	??___ftdiv+3
  2306  019F  0829               	movf	??___ftdiv+3,w
  2307  01A0  00AE               	movwf	___ftdiv@exp
  2308  01A1  08AE               	movf	___ftdiv@exp,f
  2309  01A2  1D03               	skipz
  2310  01A3  29AB               	goto	i1l1140
  2311  01A4  3000               	movlw	0
  2312  01A5  00A0               	movwf	?___ftdiv
  2313  01A6  3000               	movlw	0
  2314  01A7  00A1               	movwf	?___ftdiv+1
  2315  01A8  3000               	movlw	0
  2316  01A9  00A2               	movwf	?___ftdiv+2
  2317  01AA  0008               	return
  2318  01AB                     i1l1140:	
  2319  01AB  0820               	movf	___ftdiv@f2,w
  2320  01AC  00A6               	movwf	??___ftdiv
  2321  01AD  0821               	movf	___ftdiv@f2+1,w
  2322  01AE  00A7               	movwf	??___ftdiv+1
  2323  01AF  0822               	movf	___ftdiv@f2+2,w
  2324  01B0  00A8               	movwf	??___ftdiv+2
  2325  01B1  1003               	clrc
  2326  01B2  0D27               	rlf	??___ftdiv+1,w
  2327  01B3  0D28               	rlf	??___ftdiv+2,w
  2328  01B4  00A9               	movwf	??___ftdiv+3
  2329  01B5  0829               	movf	??___ftdiv+3,w
  2330  01B6  00AF               	movwf	___ftdiv@sign
  2331  01B7  08AF               	movf	___ftdiv@sign,f
  2332  01B8  1D03               	skipz
  2333  01B9  29C1               	goto	i1l1146
  2334  01BA  3000               	movlw	0
  2335  01BB  00A0               	movwf	?___ftdiv
  2336  01BC  3000               	movlw	0
  2337  01BD  00A1               	movwf	?___ftdiv+1
  2338  01BE  3000               	movlw	0
  2339  01BF  00A2               	movwf	?___ftdiv+2
  2340  01C0  0008               	return
  2341  01C1                     i1l1146:	
  2342  01C1  3000               	movlw	0
  2343  01C2  00AB               	movwf	___ftdiv@f3
  2344  01C3  3000               	movlw	0
  2345  01C4  00AC               	movwf	___ftdiv@f3+1
  2346  01C5  3000               	movlw	0
  2347  01C6  00AD               	movwf	___ftdiv@f3+2
  2348  01C7  3089               	movlw	137
  2349  01C8  072F               	addwf	___ftdiv@sign,w
  2350  01C9  00A6               	movwf	??___ftdiv
  2351  01CA  0826               	movf	??___ftdiv,w
  2352  01CB  02AE               	subwf	___ftdiv@exp,f
  2353  01CC  0823               	movf	___ftdiv@f1,w
  2354  01CD  00A6               	movwf	??___ftdiv
  2355  01CE  0824               	movf	___ftdiv@f1+1,w
  2356  01CF  00A7               	movwf	??___ftdiv+1
  2357  01D0  0825               	movf	___ftdiv@f1+2,w
  2358  01D1  00A8               	movwf	??___ftdiv+2
  2359  01D2  3010               	movlw	16
  2360  01D3                     u108_25:	
  2361  01D3  1003               	clrc
  2362  01D4  0CA8               	rrf	??___ftdiv+2,f
  2363  01D5  0CA7               	rrf	??___ftdiv+1,f
  2364  01D6  0CA6               	rrf	??___ftdiv,f
  2365  01D7  3EFF               	addlw	-1
  2366  01D8  1D03               	skipz
  2367  01D9  29D3               	goto	u108_25
  2368  01DA  0826               	movf	??___ftdiv,w
  2369  01DB  00A9               	movwf	??___ftdiv+3
  2370  01DC  0829               	movf	??___ftdiv+3,w
  2371  01DD  00AF               	movwf	___ftdiv@sign
  2372  01DE  0820               	movf	___ftdiv@f2,w
  2373  01DF  00A6               	movwf	??___ftdiv
  2374  01E0  0821               	movf	___ftdiv@f2+1,w
  2375  01E1  00A7               	movwf	??___ftdiv+1
  2376  01E2  0822               	movf	___ftdiv@f2+2,w
  2377  01E3  00A8               	movwf	??___ftdiv+2
  2378  01E4  3010               	movlw	16
  2379  01E5                     u109_25:	
  2380  01E5  1003               	clrc
  2381  01E6  0CA8               	rrf	??___ftdiv+2,f
  2382  01E7  0CA7               	rrf	??___ftdiv+1,f
  2383  01E8  0CA6               	rrf	??___ftdiv,f
  2384  01E9  3EFF               	addlw	-1
  2385  01EA  1D03               	skipz
  2386  01EB  29E5               	goto	u109_25
  2387  01EC  0826               	movf	??___ftdiv,w
  2388  01ED  00A9               	movwf	??___ftdiv+3
  2389  01EE  0829               	movf	??___ftdiv+3,w
  2390  01EF  06AF               	xorwf	___ftdiv@sign,f
  2391  01F0  3080               	movlw	128
  2392  01F1  00A6               	movwf	??___ftdiv
  2393  01F2  0826               	movf	??___ftdiv,w
  2394  01F3  05AF               	andwf	___ftdiv@sign,f
  2395  01F4  17A4               	bsf	___ftdiv@f1+1,7
  2396  01F5  30FF               	movlw	255
  2397  01F6  05A3               	andwf	___ftdiv@f1,f
  2398  01F7  30FF               	movlw	255
  2399  01F8  05A4               	andwf	___ftdiv@f1+1,f
  2400  01F9  3000               	movlw	0
  2401  01FA  05A5               	andwf	___ftdiv@f1+2,f
  2402  01FB  17A1               	bsf	___ftdiv@f2+1,7
  2403  01FC  30FF               	movlw	255
  2404  01FD  05A0               	andwf	___ftdiv@f2,f
  2405  01FE  30FF               	movlw	255
  2406  01FF  05A1               	andwf	___ftdiv@f2+1,f
  2407  0200  3000               	movlw	0
  2408  0201  05A2               	andwf	___ftdiv@f2+2,f
  2409  0202  3018               	movlw	24
  2410  0203  00A6               	movwf	??___ftdiv
  2411  0204  0826               	movf	??___ftdiv,w
  2412  0205  00AA               	movwf	___ftdiv@cntr
  2413  0206                     i1l1160:	
  2414  0206  3001               	movlw	1
  2415  0207                     u110_25:	
  2416  0207  1003               	clrc
  2417  0208  0DAB               	rlf	___ftdiv@f3,f
  2418  0209  0DAC               	rlf	___ftdiv@f3+1,f
  2419  020A  0DAD               	rlf	___ftdiv@f3+2,f
  2420  020B  3EFF               	addlw	-1
  2421  020C  1D03               	skipz
  2422  020D  2A07               	goto	u110_25
  2423  020E  0822               	movf	___ftdiv@f2+2,w
  2424  020F  0225               	subwf	___ftdiv@f1+2,w
  2425  0210  1D03               	skipz
  2426  0211  2A18               	goto	u111_25
  2427  0212  0821               	movf	___ftdiv@f2+1,w
  2428  0213  0224               	subwf	___ftdiv@f1+1,w
  2429  0214  1D03               	skipz
  2430  0215  2A18               	goto	u111_25
  2431  0216  0820               	movf	___ftdiv@f2,w
  2432  0217  0223               	subwf	___ftdiv@f1,w
  2433  0218                     u111_25:	
  2434  0218  1C03               	skipc
  2435  0219  2A25               	goto	i1l1168
  2436  021A  0820               	movf	___ftdiv@f2,w
  2437  021B  02A3               	subwf	___ftdiv@f1,f
  2438  021C  0821               	movf	___ftdiv@f2+1,w
  2439  021D  1C03               	skipc
  2440  021E  0F21               	incfsz	___ftdiv@f2+1,w
  2441  021F  02A4               	subwf	___ftdiv@f1+1,f
  2442  0220  0822               	movf	___ftdiv@f2+2,w
  2443  0221  1C03               	skipc
  2444  0222  0A22               	incf	___ftdiv@f2+2,w
  2445  0223  02A5               	subwf	___ftdiv@f1+2,f
  2446  0224  142B               	bsf	___ftdiv@f3,0
  2447  0225                     i1l1168:	
  2448  0225  3001               	movlw	1
  2449  0226                     u112_25:	
  2450  0226  1003               	clrc
  2451  0227  0DA3               	rlf	___ftdiv@f1,f
  2452  0228  0DA4               	rlf	___ftdiv@f1+1,f
  2453  0229  0DA5               	rlf	___ftdiv@f1+2,f
  2454  022A  3EFF               	addlw	-1
  2455  022B  1D03               	skipz
  2456  022C  2A26               	goto	u112_25
  2457  022D  3001               	movlw	1
  2458  022E  02AA               	subwf	___ftdiv@cntr,f
  2459  022F  1D03               	btfss	3,2
  2460  0230  2A06               	goto	i1l1160
  2461  0231  082B               	movf	___ftdiv@f3,w
  2462  0232  00F0               	movwf	___ftpack@arg
  2463  0233  082C               	movf	___ftdiv@f3+1,w
  2464  0234  00F1               	movwf	___ftpack@arg+1
  2465  0235  082D               	movf	___ftdiv@f3+2,w
  2466  0236  00F2               	movwf	___ftpack@arg+2
  2467  0237  082E               	movf	___ftdiv@exp,w
  2468  0238  00A6               	movwf	??___ftdiv
  2469  0239  0826               	movf	??___ftdiv,w
  2470  023A  00F3               	movwf	___ftpack@exp
  2471  023B  082F               	movf	___ftdiv@sign,w
  2472  023C  00A7               	movwf	??___ftdiv+1
  2473  023D  0827               	movf	??___ftdiv+1,w
  2474  023E  00F4               	movwf	___ftpack@sign
  2475  023F  120A  118A  2359   	fcall	___ftpack
  2476  0242  0870               	movf	?___ftpack,w
  2477  0243  1283               	bcf	3,5	;RP0=0, select bank0
  2478  0244  1303               	bcf	3,6	;RP1=0, select bank0
  2479  0245  00A0               	movwf	?___ftdiv
  2480  0246  0871               	movf	?___ftpack+1,w
  2481  0247  00A1               	movwf	?___ftdiv+1
  2482  0248  0872               	movf	?___ftpack+2,w
  2483  0249  00A2               	movwf	?___ftdiv+2
  2484  024A  0008               	return
  2485  024B                     __end_of___ftdiv:	
  2486                           
  2487                           	psect	text13
  2488  05CA                     __ptext13:	
  2489 ;; *************** function ___awtoft *****************
  2490 ;; Defined at:
  2491 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\awtoft.c"
  2492 ;; Parameters:    Size  Location     Type
  2493 ;;  c               2    8[COMMON] int 
  2494 ;; Auto vars:     Size  Location     Type
  2495 ;;  sign            1   13[COMMON] unsigned char 
  2496 ;; Return value:  Size  Location     Type
  2497 ;;                  3    8[COMMON] float 
  2498 ;; Registers used:
  2499 ;;		wreg, status,2, status,0, pclath, cstack
  2500 ;; Tracked objects:
  2501 ;;		On entry : 0/0
  2502 ;;		On exit  : 0/0
  2503 ;;		Unchanged: 0/0
  2504 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2505 ;;      Params:         3       0       0       0       0
  2506 ;;      Locals:         1       0       0       0       0
  2507 ;;      Temps:          2       0       0       0       0
  2508 ;;      Totals:         6       0       0       0       0
  2509 ;;Total ram usage:        6 bytes
  2510 ;; Hardware stack levels used:    1
  2511 ;; Hardware stack levels required when called:    1
  2512 ;; This function calls:
  2513 ;;		___ftpack
  2514 ;; This function is called by:
  2515 ;;		_echo
  2516 ;; This function uses a non-reentrant model
  2517 ;;
  2518                           
  2519                           
  2520                           ;psect for function ___awtoft
  2521  05CA                     ___awtoft:	
  2522                           
  2523                           ;incstack = 0
  2524                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
  2525  05CA  01FD               	clrf	___awtoft@sign
  2526  05CB  1FF9               	btfss	___awtoft@c+1,7
  2527  05CC  2DD4               	goto	i1l1130
  2528  05CD  09F8               	comf	___awtoft@c,f
  2529  05CE  09F9               	comf	___awtoft@c+1,f
  2530  05CF  0AF8               	incf	___awtoft@c,f
  2531  05D0  1903               	skipnz
  2532  05D1  0AF9               	incf	___awtoft@c+1,f
  2533  05D2  01FD               	clrf	___awtoft@sign
  2534  05D3  0AFD               	incf	___awtoft@sign,f
  2535  05D4                     i1l1130:	
  2536  05D4  0878               	movf	___awtoft@c,w
  2537  05D5  00F0               	movwf	___ftpack@arg
  2538  05D6  0879               	movf	___awtoft@c+1,w
  2539  05D7  00F1               	movwf	___ftpack@arg+1
  2540  05D8  01F2               	clrf	___ftpack@arg+2
  2541  05D9  308E               	movlw	142
  2542  05DA  00FB               	movwf	??___awtoft
  2543  05DB  087B               	movf	??___awtoft,w
  2544  05DC  00F3               	movwf	___ftpack@exp
  2545  05DD  087D               	movf	___awtoft@sign,w
  2546  05DE  00FC               	movwf	??___awtoft+1
  2547  05DF  087C               	movf	??___awtoft+1,w
  2548  05E0  00F4               	movwf	___ftpack@sign
  2549  05E1  120A  118A  2359   	fcall	___ftpack
  2550  05E4  0870               	movf	?___ftpack,w
  2551  05E5  00F8               	movwf	?___awtoft
  2552  05E6  0871               	movf	?___ftpack+1,w
  2553  05E7  00F9               	movwf	?___awtoft+1
  2554  05E8  0872               	movf	?___ftpack+2,w
  2555  05E9  00FA               	movwf	?___awtoft+2
  2556  05EA  0008               	return
  2557  05EB                     __end_of___awtoft:	
  2558                           
  2559                           	psect	text14
  2560  0359                     __ptext14:	
  2561 ;; *************** function ___ftpack *****************
  2562 ;; Defined at:
  2563 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\float.c"
  2564 ;; Parameters:    Size  Location     Type
  2565 ;;  arg             3    0[COMMON] unsigned um
  2566 ;;  exp             1    3[COMMON] unsigned char 
  2567 ;;  sign            1    4[COMMON] unsigned char 
  2568 ;; Auto vars:     Size  Location     Type
  2569 ;;		None
  2570 ;; Return value:  Size  Location     Type
  2571 ;;                  3    0[COMMON] float 
  2572 ;; Registers used:
  2573 ;;		wreg, status,2, status,0
  2574 ;; Tracked objects:
  2575 ;;		On entry : 0/0
  2576 ;;		On exit  : 0/0
  2577 ;;		Unchanged: 0/0
  2578 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2579 ;;      Params:         5       0       0       0       0
  2580 ;;      Locals:         0       0       0       0       0
  2581 ;;      Temps:          3       0       0       0       0
  2582 ;;      Totals:         8       0       0       0       0
  2583 ;;Total ram usage:        8 bytes
  2584 ;; Hardware stack levels used:    1
  2585 ;; This function calls:
  2586 ;;		Nothing
  2587 ;; This function is called by:
  2588 ;;		___awtoft
  2589 ;;		___ftdiv
  2590 ;; This function uses a non-reentrant model
  2591 ;;
  2592                           
  2593                           
  2594                           ;psect for function ___ftpack
  2595  0359                     ___ftpack:	
  2596                           
  2597                           ;incstack = 0
  2598                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  2599  0359  0873               	movf	___ftpack@exp,w
  2600  035A  1903               	btfsc	3,2
  2601  035B  2B61               	goto	i1l974
  2602  035C  0872               	movf	___ftpack@arg+2,w
  2603  035D  0471               	iorwf	___ftpack@arg+1,w
  2604  035E  0470               	iorwf	___ftpack@arg,w
  2605  035F  1D03               	skipz
  2606  0360  2B74               	goto	i1l980
  2607  0361                     i1l974:	
  2608  0361  3000               	movlw	0
  2609  0362  00F0               	movwf	?___ftpack
  2610  0363  3000               	movlw	0
  2611  0364  00F1               	movwf	?___ftpack+1
  2612  0365  3000               	movlw	0
  2613  0366  00F2               	movwf	?___ftpack+2
  2614  0367  0008               	return
  2615  0368                     i1l978:	
  2616  0368  3001               	movlw	1
  2617  0369  00F5               	movwf	??___ftpack
  2618  036A  0875               	movf	??___ftpack,w
  2619  036B  07F3               	addwf	___ftpack@exp,f
  2620  036C  3001               	movlw	1
  2621  036D                     u72_25:	
  2622  036D  1003               	clrc
  2623  036E  0CF2               	rrf	___ftpack@arg+2,f
  2624  036F  0CF1               	rrf	___ftpack@arg+1,f
  2625  0370  0CF0               	rrf	___ftpack@arg,f
  2626  0371  3EFF               	addlw	-1
  2627  0372  1D03               	skipz
  2628  0373  2B6D               	goto	u72_25
  2629  0374                     i1l980:	
  2630  0374  30FE               	movlw	254
  2631  0375  0572               	andwf	___ftpack@arg+2,w
  2632  0376  1903               	btfsc	3,2
  2633  0377  2B8F               	goto	i1l338
  2634  0378  2B68               	goto	i1l978
  2635  0379                     i1l982:	
  2636  0379  3001               	movlw	1
  2637  037A  00F5               	movwf	??___ftpack
  2638  037B  0875               	movf	??___ftpack,w
  2639  037C  07F3               	addwf	___ftpack@exp,f
  2640  037D  3001               	movlw	1
  2641  037E  07F0               	addwf	___ftpack@arg,f
  2642  037F  3000               	movlw	0
  2643  0380  1803               	skipnc
  2644  0381  3001               	movlw	1
  2645  0382  07F1               	addwf	___ftpack@arg+1,f
  2646  0383  3000               	movlw	0
  2647  0384  1803               	skipnc
  2648  0385  3001               	movlw	1
  2649  0386  07F2               	addwf	___ftpack@arg+2,f
  2650  0387  3001               	movlw	1
  2651  0388                     u74_25:	
  2652  0388  1003               	clrc
  2653  0389  0CF2               	rrf	___ftpack@arg+2,f
  2654  038A  0CF1               	rrf	___ftpack@arg+1,f
  2655  038B  0CF0               	rrf	___ftpack@arg,f
  2656  038C  3EFF               	addlw	-1
  2657  038D  1D03               	skipz
  2658  038E  2B88               	goto	u74_25
  2659  038F                     i1l338:	
  2660  038F  30FF               	movlw	255
  2661  0390  0572               	andwf	___ftpack@arg+2,w
  2662  0391  1903               	btfsc	3,2
  2663  0392  2B9E               	goto	i1l990
  2664  0393  2B79               	goto	i1l982
  2665  0394                     i1l988:	
  2666  0394  3001               	movlw	1
  2667  0395  02F3               	subwf	___ftpack@exp,f
  2668  0396  3001               	movlw	1
  2669  0397                     u76_25:	
  2670  0397  1003               	clrc
  2671  0398  0DF0               	rlf	___ftpack@arg,f
  2672  0399  0DF1               	rlf	___ftpack@arg+1,f
  2673  039A  0DF2               	rlf	___ftpack@arg+2,f
  2674  039B  3EFF               	addlw	-1
  2675  039C  1D03               	skipz
  2676  039D  2B97               	goto	u76_25
  2677  039E                     i1l990:	
  2678  039E  1FF1               	btfss	___ftpack@arg+1,7
  2679  039F  2B94               	goto	i1l988
  2680  03A0  1873               	btfsc	___ftpack@exp,0
  2681  03A1  2BA8               	goto	i1l344
  2682  03A2  30FF               	movlw	255
  2683  03A3  05F0               	andwf	___ftpack@arg,f
  2684  03A4  307F               	movlw	127
  2685  03A5  05F1               	andwf	___ftpack@arg+1,f
  2686  03A6  30FF               	movlw	255
  2687  03A7  05F2               	andwf	___ftpack@arg+2,f
  2688  03A8                     i1l344:	
  2689  03A8  1003               	clrc
  2690  03A9  0CF3               	rrf	___ftpack@exp,f
  2691  03AA  0873               	movf	___ftpack@exp,w
  2692  03AB  00F5               	movwf	??___ftpack
  2693  03AC  01F6               	clrf	??___ftpack+1
  2694  03AD  01F7               	clrf	??___ftpack+2
  2695  03AE  3010               	movlw	16
  2696  03AF                     u79_25:	
  2697  03AF  1003               	clrc
  2698  03B0  0DF5               	rlf	??___ftpack,f
  2699  03B1  0DF6               	rlf	??___ftpack+1,f
  2700  03B2  0DF7               	rlf	??___ftpack+2,f
  2701  03B3  3EFF               	addlw	-1
  2702  03B4  1D03               	skipz
  2703  03B5  2BAF               	goto	u79_25
  2704  03B6  0875               	movf	??___ftpack,w
  2705  03B7  04F0               	iorwf	___ftpack@arg,f
  2706  03B8  0876               	movf	??___ftpack+1,w
  2707  03B9  04F1               	iorwf	___ftpack@arg+1,f
  2708  03BA  0877               	movf	??___ftpack+2,w
  2709  03BB  04F2               	iorwf	___ftpack@arg+2,f
  2710  03BC  0874               	movf	___ftpack@sign,w
  2711  03BD  1903               	btfsc	3,2
  2712  03BE  0008               	return
  2713  03BF  17F2               	bsf	___ftpack@arg+2,7
  2714  03C0  0008               	return
  2715  03C1                     __end_of___ftpack:	
  2716  007E                     btemp	set	126	;btemp
  2717  007E                     wtemp	set	126
  2718  007E                     wtemp0	set	126
  2719  0080                     wtemp1	set	128
  2720  0082                     wtemp2	set	130
  2721  0084                     wtemp3	set	132
  2722  0086                     wtemp4	set	134
  2723  0088                     wtemp5	set	136
  2724  007F                     wtemp6	set	127
  2725  007E                     ttemp	set	126
  2726  007E                     ttemp0	set	126
  2727  0081                     ttemp1	set	129
  2728  0084                     ttemp2	set	132
  2729  0087                     ttemp3	set	135
  2730  007F                     ttemp4	set	127
  2731  007E                     ltemp	set	126
  2732  007E                     ltemp0	set	126
  2733  0082                     ltemp1	set	130
  2734  0086                     ltemp2	set	134
  2735  0080                     ltemp3	set	128


Data Sizes:
    Strings     53
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     42      44
    BANK1            80      9       9
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 13
		 -> STR_5(CODE[13]), STR_4(CODE[3]), STR_3(CODE[12]), STR_2(CODE[12]), 
		 -> STR_1(CODE[13]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _echo in COMMON

    _echo->___awtoft
    ___fttol->___awtoft
    ___ftdiv->___awtoft
    ___awtoft->___ftpack

Critical Paths under _main in BANK0

    _main->_Lcd_Init
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _echo in BANK0

    _echo->___fttol
    ___fttol->___ftdiv

Critical Paths under _main in BANK1

    _main->_Lcd_Set_Cursor

Critical Paths under _echo in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _echo in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _echo in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    3622
                                              6 BANK1      3     3      0
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                     _Lcd_Write_Char
                   _Lcd_Write_String
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              7     3      4     823
                                             36 BANK0      5     1      4
                                              0 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              9     5      4     512
                                             36 BANK0      5     1      4
                                              0 BANK1      4     4      0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     3     3      0     534
                                              0 BANK1      3     3      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       4     4      0     254
                                             37 BANK0      4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       7     6      1    1065
                                             40 BANK0      1     0      1
                                              0 BANK1      6     6      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     279
                                             40 BANK0      2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0     155
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0     155
                                             37 BANK0      3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0     124
                                             36 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _echo                                                 6     6      0    4049
                                             30 BANK0      6     6      0
                           ___awtoft
                            ___ftdiv
                            ___fttol
 ---------------------------------------------------------------------------------
 (5) ___fttol                                             14    10      4     305
                                             16 BANK0     14    10      4
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___ftdiv                                             16    10      6    1993
                                              0 BANK0     16    10      6
                           ___awtoft (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (5) ___awtoft                                             6     3      3    1751
                                              8 COMMON     6     3      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (6) ___ftpack                                             8     3      5    1607
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Write_Char
     _Lcd_Port
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   ___awdiv
   ___awmod

 _echo (ROOT)
   ___awtoft
     ___ftpack
   ___ftdiv
     ___awtoft (ARG)
       ___ftpack
     ___ftpack (ARG)
   ___fttol
     ___awtoft (ARG)
       ___ftpack
     ___ftdiv (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      43       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     2A      2C       5       55.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      9       9       7       11.3%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      43      12        0.0%


Microchip Technology PIC Macro Assembler V1.32 build 58300 
Symbol Table                                                                                   Wed Aug 20 15:20:37 2014

                        _a 004A                          pc 0002                __CFG_CP$OFF 0000  
                       l40 060D                         l41 0611                         l42 0612  
                       l43 0616                         l44 0617                         l45 061B  
                       l39 060C               ___awdiv@sign 00A1                         fsr 0004  
                      _GIE 005F                        _RB0 0030                        _RB4 0034  
                      _RD2 0042                        _RD3 0043                        _RD4 0044  
                      _RD5 0045                        _RD6 0046                        _RD7 0047  
             __CFG_CPD$OFF 0000                        u915 031B                        u925 0329  
                      u935 0336                        u895 030B                        fsr0 0004  
             ___awmod@sign 00A1               __CFG_FOSC$HS 0000               __CFG_LVP$OFF 0000  
             ___ftdiv@cntr 002A               ___ftdiv@sign 002F                       l1054 02F7  
                     l1080 034C                       l1072 0334                       l1064 0305  
                     l1048 02E9                       l1066 0318                       l1410 03E1  
                     l1402 03D9                       l1076 0342                       l1412 03F4  
                     l1420 0410                       l1424 041E                       l1416 0403  
                     l1362 04B5                       l1458 0060                       l1388 05A9  
                     l1398 03D1                       l1498 016F                       STR_1 0543  
                     STR_2 055C                       STR_3 0550                       STR_4 0568  
                     STR_5 0536                       u1335 057C                       u1425 03E7  
                     u1355 049A                       u1507 0050                       u1445 03FB  
                     u1517 0069                       u1375 04C7                       u1455 0404  
                     u1527 0077                       u1537 018C                       u1547 058C  
                     u1557 059D                       u1485 0091                       u1567 0432  
                     u1495 009E                       u1577 0443                       u1587 0454  
                     u1597 05FC                       _RBIE 005B                       _RBIF 0058  
                     i1l83 04E8               __CFG_WRT$OFF 0000          ?_Lcd_Write_String 0070  
                     _echo 04E2                       _main 001B               ___ftpack@arg 0070  
             ___ftpack@exp 0073                       btemp 007E              __CFG_BOREN$ON 0000  
                     ltemp 007E                       start 0012                       ttemp 007E  
       ??_Lcd_Write_String 0049                       wtemp 007E            __end_of_Lcd_Cmd 0605  
             ___fttol@exp1 003D               ___fttol@lval 0039                      ?_echo 0070  
                    ?_main 0070            __end_of___awdiv 0359              __CFG_WDTE$OFF 0000  
          __end_of___awmod 0426            __end_of___ftdiv 024B            ___awdiv@divisor 0044  
                    _T1CON 0010            __end_of___fttol 02D9                      i1l344 03A8  
                    i1l338 038F                      i1l980 0374                      i1l990 039E  
                    i1l982 0379                      i1l974 0361                      i1l978 0368  
                    i1l988 0394            ___awdiv@counter 00A0                      _TMR1H 000F  
                    _TMR1L 000E                      u72_25 036D    __size_of_Lcd_Set_Cursor 005B  
                    _TRISB 0086                      _TRISD 0088                      u74_25 0388  
                    u76_25 0397                      u79_25 03AF              ___awtoft@sign 007D  
            ___ftpack@sign 0074                      pclath 000A                      ltemp0 007E  
                    ltemp1 0082                      ltemp2 0086                      ltemp3 0080  
                    ttemp0 007E                      ttemp1 0081                      ttemp2 0084  
                    ttemp3 0087                      ttemp4 007F                      status 0003  
                    wtemp0 007E                      wtemp1 0080                      wtemp2 0082  
                    wtemp3 0084                      wtemp4 0086                      wtemp5 0088  
                    wtemp6 007F           __end_of_Lcd_Init 0487           __end_of_Lcd_Port 061D  
          __initialization 0015               __end_of_echo 0530               __end_of_main 0193  
                   ??_echo 003E                     ??_main 00A6              ___fttol@sign1 0038  
       __size_of_Lcd_Clear 000B           ___awdiv@dividend 0046           __end_of___awtoft 05EB  
         __end_of___ftpack 03C1                     i1l1200 0297                     i1l1130 05D4  
                   i1l1210 02BF                     i1l1202 02A7                     i1l1140 01AB  
                   i1l1212 02C2                     u110_25 0207                     i1l1160 0206  
                   i1l1216 02D0                     i1l1208 02B4                     i1l1146 01C1  
                   i1l1234 0523                     u111_25 0218                     i1l1182 0265  
                   i1l1168 0225                     u112_25 0226                     u121_25 02B6  
                   u115_25 026C                     u108_25 01D3                     u109_25 01E5  
                   u118_25 0298                  ??_Lcd_Cmd 0045                     _TMR1ON 0080  
  __size_of_Lcd_Write_Char 0039             __CFG_PWRTE$OFF 0000                  ??___awdiv 0048  
                ??___awmod 0048                  ??___ftdiv 0026                  ??___fttol 0034  
         ___awdiv@quotient 00A2            ___awmod@divisor 0044            ___awmod@counter 00A0  
                   saved_w 007E            Lcd_Set_Cursor@a 00A2            Lcd_Set_Cursor@b 0048  
          Lcd_Set_Cursor@y 00A4            Lcd_Set_Cursor@z 00A3    __end_of__initialization 0017  
        __end_of_Lcd_Clear 0628                 ___ftdiv@f1 0023                 ___ftdiv@f2 0020  
               ___ftdiv@f3 002B                 ___awtoft@c 0078                 ___fttol@f1 0030  
           __pcstackCOMMON 0070             _Lcd_Set_Cursor 0487                  ?_Lcd_Init 0070  
                ?_Lcd_Port 0070                 __pbssBANK0 004A                 __pmaintext 001B  
               __pintentry 0004  __size_of_Lcd_Write_String 0026                  ?___awtoft 0078  
                ?___ftpack 0070     __end_of_Lcd_Set_Cursor 04E2                 ??_Lcd_Init 0048  
               ??_Lcd_Port 0044                 __stringtab 0530             _Lcd_Write_Char 056B  
                  _Lcd_Cmd 05EB                    ___awdiv 02D9                    ___awmod 03C1  
                  ___ftdiv 0193                    ___fttol 024B                 ??___awtoft 007B  
               ??___ftpack 0075            ?_Lcd_Set_Cursor 0048                    __ptext1 03C1  
                  __ptext2 02D9                    __ptext3 05A4                    __ptext4 056B  
                  __ptext5 0487                    __ptext6 0426                    __ptext7 061D  
                  __ptext8 05EB                    __ptext9 0605           ___awmod@dividend 0046  
   __end_of_Lcd_Write_Char 05A4       end_of_initialization 0017                  Lcd_Port@a 0044  
          ?_Lcd_Write_Char 0070          Lcd_Write_String@a 00A2          Lcd_Write_String@i 00A0  
              ___ftdiv@exp 002E                  _Lcd_Clear 061D           _Lcd_Write_String 05A4  
      start_initialization 0015          __size_of_Lcd_Init 0061          __size_of_Lcd_Port 0018  
               ?_Lcd_Clear 0070            Lcd_Write_Char@a 0048            Lcd_Write_Char@y 0047  
        __size_of___awtoft 0021          __size_of___ftpack 0068                  ___latbits 0002  
            __pcstackBANK0 0020              __pcstackBANK1 00A0        __end_of__stringdata 056B  
                 ?_Lcd_Cmd 0070           ??_Lcd_Set_Cursor 00A0                   ?___awdiv 0044  
                 ?___awmod 0044                   ?___ftdiv 0020                   ?___fttol 0030  
                __pstrings 0530          interrupt_function 0004                   Lcd_Cmd@a 0047  
              ??_Lcd_Clear 0048                __stringbase 0535                __stringdata 0536  
         ??_Lcd_Write_Char 0045                   _Lcd_Init 0426                   _Lcd_Port 0605  
 __end_of_Lcd_Write_String 05CA           __size_of_Lcd_Cmd 001A           __size_of___awdiv 0080  
         __size_of___awmod 0065           __size_of___ftdiv 00B8           __size_of___fttol 008E  
                 ___awtoft 05CA                   ___ftpack 0359         __end_of__stringtab 0536  
                 __ptext10 04E2                   __ptext11 024B                   __ptext12 0193  
                 __ptext13 05CA                   __ptext14 0359              __size_of_echo 004E  
            __size_of_main 0178         Lcd_Write_Char@temp 0046                   intlevel1 0000  
                stringcode 0530         Lcd_Set_Cursor@temp 00A5                   stringdir 0530  
                 stringtab 0530  
